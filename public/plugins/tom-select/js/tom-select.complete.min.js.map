{"version":3,"file":"tom-select.complete.min.js","sources":["../../src/contrib/microevent.ts","../../node_modules/@orchidjs/unicode-variants/dist/esm/regex.js","../../node_modules/@orchidjs/unicode-variants/dist/esm/strings.js","../../node_modules/@orchidjs/unicode-variants/dist/esm/index.js","../../node_modules/@orchidjs/sifter/dist/esm/utils.js","../../node_modules/@orchidjs/sifter/dist/esm/sifter.js","../../node_modules/@orchidjs/sifter/lib/utils.ts","../../src/vanilla.ts","../../src/contrib/highlight.ts","../../src/constants.ts","../../src/defaults.ts","../../src/utils.ts","../../src/getSettings.ts","../../src/tom-select.ts","../../src/contrib/microplugin.ts","../../src/tom-select.complete.ts","../../src/plugins/change_listener/plugin.ts","../../src/plugins/checkbox_options/plugin.ts","../../src/plugins/clear_button/plugin.ts","../../src/plugins/drag_drop/plugin.ts","../../src/plugins/dropdown_header/plugin.ts","../../src/plugins/caret_position/plugin.ts","../../src/plugins/dropdown_input/plugin.ts","../../src/plugins/input_autogrow/plugin.ts","../../src/plugins/no_backspace_delete/plugin.ts","../../src/plugins/no_active_items/plugin.ts","../../src/plugins/optgroup_columns/plugin.ts","../../src/plugins/remove_button/plugin.ts","../../src/plugins/restore_on_backspace/plugin.ts","../../src/plugins/virtual_scroll/plugin.ts"],"sourcesContent":["/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\ntype TCallback = (...args:any) => any;\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events:string,callback:(event:string)=>any){\n\tevents.split(/\\s+/).forEach((event) =>{\n\t\tcallback(event);\n\t});\n}\n\nexport default class MicroEvent{\n\n\tpublic _events: {[key:string]:TCallback[]};\n\n\tconstructor(){\n\t\tthis._events = {};\n\t}\n\n\ton(events:string, fct:TCallback){\n\t\tforEvents(events,(event) => {\n\t\t\tconst event_array = this._events[event] || [];\n\t\t\tevent_array.push(fct);\n\t\t\tthis._events[event] = event_array;\n\t\t});\n\t}\n\n\toff(events:string, fct:TCallback){\n\t\tvar n = arguments.length;\n\t\tif( n === 0 ){\n\t\t\tthis._events = {};\n\t\t\treturn;\n\t\t}\n\n\t\tforEvents(events,(event) => {\n\n\t\t\tif (n === 1){\n\t\t\t\tdelete this._events[event];\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst event_array = this._events[event];\n\t\t\tif( event_array === undefined ) return;\n\n\t\t\tevent_array.splice(event_array.indexOf(fct), 1);\n\t\t\tthis._events[event] = event_array;\n\t\t});\n\t}\n\n\ttrigger(events:string, ...args:any){\n\t\tvar self = this;\n\n\t\tforEvents(events,(event) => {\n\t\t\tconst event_array = self._events[event];\n\t\t\tif( event_array === undefined ) return;\n\t\t\tevent_array.forEach(fct => {\n\t\t\t\tfct.apply(self, args );\n\t\t\t});\n\n\t\t});\n\t}\n};\n","/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {string[]} chars\n * @return {string}\n */\nconst arrayToPattern = chars => {\n  chars = chars.filter(Boolean);\n\n  if (chars.length < 2) {\n    return chars[0] || '';\n  }\n\n  return maxValueLength(chars) == 1 ? '[' + chars.join('') + ']' : '(?:' + chars.join('|') + ')';\n};\n/**\n * @param {string[]} array\n * @return {string}\n */\n\nconst sequencePattern = array => {\n  if (!hasDuplicates(array)) {\n    return array.join('');\n  }\n\n  let pattern = '';\n  let prev_char_count = 0;\n\n  const prev_pattern = () => {\n    if (prev_char_count > 1) {\n      pattern += '{' + prev_char_count + '}';\n    }\n  };\n\n  array.forEach((char, i) => {\n    if (char === array[i - 1]) {\n      prev_char_count++;\n      return;\n    }\n\n    prev_pattern();\n    pattern += char;\n    prev_char_count = 1;\n  });\n  prev_pattern();\n  return pattern;\n};\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {Set<string>} chars\n * @return {string}\n */\n\nconst setToPattern = chars => {\n  let array = toArray(chars);\n  return arrayToPattern(array);\n};\n/**\n *\n * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n * @param {any[]} array\n */\n\nconst hasDuplicates = array => {\n  return new Set(array).size !== array.length;\n};\n/**\n * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n * @param {string} str\n * @return {string}\n */\n\nconst escape_regex = str => {\n  return (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n};\n/**\n * Return the max length of array values\n * @param {string[]} array\n *\n */\n\nconst maxValueLength = array => {\n  return array.reduce((longest, value) => Math.max(longest, unicodeLength(value)), 0);\n};\n/**\n * @param {string} str\n */\n\nconst unicodeLength = str => {\n  return toArray(str).length;\n};\n/**\n * @param {any} p\n * @return {any[]}\n */\n\nconst toArray = p => Array.from(p);\n\nexport { arrayToPattern, escape_regex, hasDuplicates, maxValueLength, sequencePattern, setToPattern, toArray, unicodeLength };\n//# sourceMappingURL=regex.js.map\n","/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Get all possible combinations of substrings that add up to the given string\n * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n * @param {string} input\n * @return {string[][]}\n */\nconst allSubstrings = input => {\n  if (input.length === 1) return [[input]];\n  /** @type {string[][]} */\n\n  let result = [];\n  const start = input.substring(1);\n  const suba = allSubstrings(start);\n  suba.forEach(function (subresult) {\n    let tmp = subresult.slice(0);\n    tmp[0] = input.charAt(0) + tmp[0];\n    result.push(tmp);\n    tmp = subresult.slice(0);\n    tmp.unshift(input.charAt(0));\n    result.push(tmp);\n  });\n  return result;\n};\n\nexport { allSubstrings };\n//# sourceMappingURL=strings.js.map\n","/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\nimport { toArray, setToPattern, escape_regex, arrayToPattern, sequencePattern } from './regex.js';\nexport { escape_regex } from './regex.js';\nimport { allSubstrings } from './strings.js';\n\n/**\n * @typedef {{[key:string]:string}} TUnicodeMap\n * @typedef {{[key:string]:Set<string>}} TUnicodeSets\n * @typedef {[[number,number]]} TCodePoints\n * @typedef {{folded:string,composed:string,code_point:number}} TCodePointObj\n * @typedef {{start:number,end:number,length:number,substr:string}} TSequencePart\n */\n/** @type {TCodePoints} */\n\nconst code_points = [[0, 65535]];\nconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}]'; // \\u{2bc}\n\n/** @type {TUnicodeMap} */\n\nlet unicode_map;\n/** @type {RegExp} */\n\nlet multi_char_reg;\nconst max_char_length = 3;\n/** @type {TUnicodeMap} */\n\nconst latin_convert = {\n  'æ': 'ae',\n  'ⱥ': 'a',\n  'ø': 'o',\n  '⁄': '/',\n  '∕': '/'\n};\nconst convert_pat = new RegExp(Object.keys(latin_convert).join('|') + '|' + accent_pat, 'gu');\n/**\n * Initialize the unicode_map from the give code point ranges\n *\n * @param {TCodePoints=} _code_points\n */\n\nconst initialize = _code_points => {\n  if (unicode_map !== undefined) return;\n  unicode_map = generateMap(_code_points || code_points);\n};\n/**\n * Helper method for normalize a string\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n * @param {string} str\n * @param {string} form\n */\n\nconst normalize = (str, form = 'NFKD') => str.normalize(form);\n/**\n * Compatibility Decomposition without reordering string\n * calling str.normalize('NFKD') on \\u{594}\\u{595}\\u{596} becomes \\u{596}\\u{594}\\u{595}\n * @param {string} str\n */\n\nconst decompose = str => {\n  if (str.match(/[\\u0f71-\\u0f81]/)) {\n    return toArray(str).reduce(\n    /**\n     * @param {string} result\n     * @param {string} char\n     */\n    (result, char) => {\n      return result + normalize(char);\n    }, '');\n  }\n\n  return normalize(str);\n};\n/**\n * Remove accents\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n * @param {string} str\n * @return {string}\n */\n\nconst asciifold = str => {\n  return decompose(str).toLowerCase().replace(convert_pat, (\n  /** @type {string} */\n  char) => {\n    return latin_convert[char] || '';\n  });\n};\n/**\n * Generate a list of unicode variants from the list of code points\n * @param {TCodePoints} code_points\n * @yield {TCodePointObj}\n */\n\nfunction* generator(code_points) {\n  for (const [code_point_min, code_point_max] of code_points) {\n    for (let i = code_point_min; i <= code_point_max; i++) {\n      let composed = String.fromCharCode(i);\n      let folded = asciifold(composed);\n\n      if (folded == composed.toLowerCase()) {\n        continue;\n      } // skip when folded is a string longer than 3 characters long\n      // bc the resulting regex patterns will be long\n      // eg:\n      // folded صلى الله عليه وسلم length 18 code point 65018\n      // folded جل جلاله length 8 code point 65019\n\n\n      if (folded.length > max_char_length) {\n        continue;\n      }\n\n      if (folded.length == 0) {\n        continue;\n      }\n\n      let decomposed = normalize(composed);\n      let recomposed = normalize(decomposed, 'NFC');\n\n      if (recomposed === composed && folded === decomposed) {\n        continue;\n      }\n\n      yield {\n        folded: folded,\n        composed: composed,\n        code_point: i\n      };\n    }\n  }\n}\n/**\n * Generate a unicode map from the list of code points\n * @param {TCodePoints} code_points\n * @return {TUnicodeSets}\n */\n\nconst generateSets = code_points => {\n  /** @type {{[key:string]:Set<string>}} */\n  const unicode_sets = {};\n  /**\n   * @param {string} folded\n   * @param {string} to_add\n   */\n\n  const addMatching = (folded, to_add) => {\n    /** @type {Set<string>} */\n    const folded_set = unicode_sets[folded] || new Set();\n    const patt = new RegExp('^' + setToPattern(folded_set) + '$', 'iu');\n\n    if (to_add.match(patt)) {\n      return;\n    }\n\n    folded_set.add(escape_regex(to_add));\n    unicode_sets[folded] = folded_set;\n  };\n\n  for (let value of generator(code_points)) {\n    addMatching(value.folded, value.folded);\n    addMatching(value.folded, value.composed);\n  }\n\n  return unicode_sets;\n};\n/**\n * Generate a unicode map from the list of code points\n * ae => (?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n *\n * @param {TCodePoints} code_points\n * @return {TUnicodeMap}\n */\n\nconst generateMap = code_points => {\n  /** @type {TUnicodeSets} */\n  const unicode_sets = generateSets(code_points);\n  /** @type {TUnicodeMap} */\n\n  const unicode_map = {};\n  /** @type {string[]} */\n\n  let multi_char = [];\n\n  for (let folded in unicode_sets) {\n    let set = unicode_sets[folded];\n\n    if (set) {\n      unicode_map[folded] = setToPattern(set);\n    }\n\n    if (folded.length > 1) {\n      multi_char.push(escape_regex(folded));\n    }\n  }\n\n  multi_char.sort((a, b) => b.length - a.length);\n  const multi_char_patt = arrayToPattern(multi_char);\n  multi_char_reg = new RegExp('^' + multi_char_patt, 'u');\n  return unicode_map;\n};\n/**\n * Map each element of an array from it's folded value to all possible unicode matches\n * @param {string[]} strings\n * @param {number} min_replacement\n * @return {string}\n */\n\nconst mapSequence = (strings, min_replacement = 1) => {\n  let chars_replaced = 0;\n  strings = strings.map(str => {\n    if (unicode_map[str]) {\n      chars_replaced += str.length;\n    }\n\n    return unicode_map[str] || str;\n  });\n\n  if (chars_replaced >= min_replacement) {\n    return sequencePattern(strings);\n  }\n\n  return '';\n};\n/**\n * Convert a short string and split it into all possible patterns\n * Keep a pattern only if min_replacement is met\n *\n * 'abc'\n * \t\t=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]\n *\t\t=> ['abc-pattern','ab-c-pattern'...]\n *\n *\n * @param {string} str\n * @param {number} min_replacement\n * @return {string}\n */\n\nconst substringsToPattern = (str, min_replacement = 1) => {\n  min_replacement = Math.max(min_replacement, str.length - 1);\n  return arrayToPattern(allSubstrings(str).map(sub_pat => {\n    return mapSequence(sub_pat, min_replacement);\n  }));\n};\n/**\n * Convert an array of sequences into a pattern\n * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)\n *\n * @param {Sequence[]} sequences\n * @param {boolean} all\n */\n\nconst sequencesToPattern = (sequences, all = true) => {\n  let min_replacement = sequences.length > 1 ? 1 : 0;\n  return arrayToPattern(sequences.map(sequence => {\n    let seq = [];\n    const len = all ? sequence.length() : sequence.length() - 1;\n\n    for (let j = 0; j < len; j++) {\n      seq.push(substringsToPattern(sequence.substrs[j] || '', min_replacement));\n    }\n\n    return sequencePattern(seq);\n  }));\n};\n/**\n * Return true if the sequence is already in the sequences\n * @param {Sequence} needle_seq\n * @param {Sequence[]} sequences\n */\n\n\nconst inSequences = (needle_seq, sequences) => {\n  for (const seq of sequences) {\n    if (seq.start != needle_seq.start || seq.end != needle_seq.end) {\n      continue;\n    }\n\n    if (seq.substrs.join('') !== needle_seq.substrs.join('')) {\n      continue;\n    }\n\n    let needle_parts = needle_seq.parts;\n    /**\n     * @param {TSequencePart} part\n     */\n\n    const filter = part => {\n      for (const needle_part of needle_parts) {\n        if (needle_part.start === part.start && needle_part.substr === part.substr) {\n          return false;\n        }\n\n        if (part.length == 1 || needle_part.length == 1) {\n          continue;\n        } // check for overlapping parts\n        // a = ['::=','==']\n        // b = ['::','===']\n        // a = ['r','sm']\n        // b = ['rs','m']\n\n\n        if (part.start < needle_part.start && part.end > needle_part.start) {\n          return true;\n        }\n\n        if (needle_part.start < part.start && needle_part.end > part.start) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    let filtered = seq.parts.filter(filter);\n\n    if (filtered.length > 0) {\n      continue;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\nclass Sequence {\n  constructor() {\n    /** @type {TSequencePart[]} */\n    this.parts = [];\n    /** @type {string[]} */\n\n    this.substrs = [];\n    this.start = 0;\n    this.end = 0;\n  }\n  /**\n   * @param {TSequencePart|undefined} part\n   */\n\n\n  add(part) {\n    if (part) {\n      this.parts.push(part);\n      this.substrs.push(part.substr);\n      this.start = Math.min(part.start, this.start);\n      this.end = Math.max(part.end, this.end);\n    }\n  }\n\n  last() {\n    return this.parts[this.parts.length - 1];\n  }\n\n  length() {\n    return this.parts.length;\n  }\n  /**\n   * @param {number} position\n   * @param {TSequencePart} last_piece\n   */\n\n\n  clone(position, last_piece) {\n    let clone = new Sequence();\n    let parts = JSON.parse(JSON.stringify(this.parts));\n    let last_part = parts.pop();\n\n    for (const part of parts) {\n      clone.add(part);\n    }\n\n    let last_substr = last_piece.substr.substring(0, position - last_part.start);\n    let clone_last_len = last_substr.length;\n    clone.add({\n      start: last_part.start,\n      end: last_part.start + clone_last_len,\n      length: clone_last_len,\n      substr: last_substr\n    });\n    return clone;\n  }\n\n}\n/**\n * Expand a regular expression pattern to include unicode variants\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n * Issue:\n *  ﺊﺋ [ 'ﺊ = \\\\u{fe8a}', 'ﺋ = \\\\u{fe8b}' ]\n *\tbecomes:\tئئ [ 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}', 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}' ]\n *\n *\tİĲ = IIJ = ⅡJ\n *\n * \t1/2/4\n *\n * @param {string} str\n * @return {string|undefined}\n */\n\n\nconst getPattern = str => {\n  initialize();\n  str = asciifold(str);\n  let pattern = '';\n  let sequences = [new Sequence()];\n\n  for (let i = 0; i < str.length; i++) {\n    let substr = str.substring(i);\n    let match = substr.match(multi_char_reg);\n    const char = str.substring(i, i + 1);\n    const match_str = match ? match[0] : null; // loop through sequences\n    // add either the char or multi_match\n\n    let overlapping = [];\n    let added_types = new Set();\n\n    for (const sequence of sequences) {\n      const last_piece = sequence.last();\n\n      if (!last_piece || last_piece.length == 1 || last_piece.end <= i) {\n        // if we have a multi match\n        if (match_str) {\n          const len = match_str.length;\n          sequence.add({\n            start: i,\n            end: i + len,\n            length: len,\n            substr: match_str\n          });\n          added_types.add('1');\n        } else {\n          sequence.add({\n            start: i,\n            end: i + 1,\n            length: 1,\n            substr: char\n          });\n          added_types.add('2');\n        }\n      } else if (match_str) {\n        let clone = sequence.clone(i, last_piece);\n        const len = match_str.length;\n        clone.add({\n          start: i,\n          end: i + len,\n          length: len,\n          substr: match_str\n        });\n        overlapping.push(clone);\n      } else {\n        // don't add char\n        // adding would create invalid patterns: 234 => [2,34,4]\n        added_types.add('3');\n      }\n    } // if we have overlapping\n\n\n    if (overlapping.length > 0) {\n      // ['ii','iii'] before ['i','i','iii']\n      overlapping = overlapping.sort((a, b) => {\n        return a.length() - b.length();\n      });\n\n      for (let clone of overlapping) {\n        // don't add if we already have an equivalent sequence\n        if (inSequences(clone, sequences)) {\n          continue;\n        }\n\n        sequences.push(clone);\n      }\n\n      continue;\n    } // if we haven't done anything unique\n    // clean up the patterns\n    // helps keep patterns smaller\n    // if str = 'r₨㎧aarss', pattern will be 446 instead of 655\n\n\n    if (i > 0 && added_types.size == 1 && !added_types.has('3')) {\n      pattern += sequencesToPattern(sequences, false);\n      let new_seq = new Sequence();\n      const old_seq = sequences[0];\n\n      if (old_seq) {\n        new_seq.add(old_seq.last());\n      }\n\n      sequences = [new_seq];\n    }\n  }\n\n  pattern += sequencesToPattern(sequences, true);\n  return pattern;\n};\n\nexport { asciifold, code_points, decompose, generateMap, generateSets, generator, getPattern, initialize, mapSequence, normalize, substringsToPattern, unicode_map };\n//# sourceMappingURL=index.js.map\n","/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { asciifold } from '@orchidjs/unicode-variants';\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nconst getAttr = (obj, name) => {\n  if (!obj) return;\n  return obj[name];\n};\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\n\nconst getAttrNesting = (obj, name) => {\n  if (!obj) return;\n  var part,\n      names = name.split(\".\");\n\n  while ((part = names.shift()) && (obj = obj[part]));\n\n  return obj;\n};\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\n\nconst scoreValue = (value, token, weight) => {\n  var score, pos;\n  if (!value) return 0;\n  value = value + '';\n  if (token.regex == null) return 0;\n  pos = value.search(token.regex);\n  if (pos === -1) return 0;\n  score = token.string.length / value.length;\n  if (pos === 0) score += 0.5;\n  return score * weight;\n};\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\n\nconst propToArray = (obj, key) => {\n  var value = obj[key];\n  if (typeof value == 'function') return value;\n\n  if (value && !Array.isArray(value)) {\n    obj[key] = [value];\n  }\n};\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\n\nconst iterate = (object, callback) => {\n  if (Array.isArray(object)) {\n    object.forEach(callback);\n  } else {\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        callback(object[key], key);\n      }\n    }\n  }\n};\nconst cmp = (a, b) => {\n  if (typeof a === 'number' && typeof b === 'number') {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  a = asciifold(a + '').toLowerCase();\n  b = asciifold(b + '').toLowerCase();\n  if (a > b) return 1;\n  if (b > a) return -1;\n  return 0;\n};\n\nexport { cmp, getAttr, getAttrNesting, iterate, propToArray, scoreValue };\n//# sourceMappingURL=utils.js.map\n","/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { iterate, cmp, propToArray, getAttrNesting, getAttr, scoreValue } from './utils.js';\nexport { cmp, getAttr, getAttrNesting, iterate, propToArray, scoreValue } from './utils.js';\nimport { escape_regex, getPattern } from '@orchidjs/unicode-variants';\nexport { getPattern } from '@orchidjs/unicode-variants';\n\n/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\nclass Sifter {\n  // []|{};\n\n  /**\n   * Textually searches arrays and hashes of objects\n   * by property (or multiple properties). Designed\n   * specifically for autocomplete.\n   *\n   */\n  constructor(items, settings) {\n    this.items = void 0;\n    this.settings = void 0;\n    this.items = items;\n    this.settings = settings || {\n      diacritics: true\n    };\n  }\n\n  /**\n   * Splits a search string into an array of individual\n   * regexps to be used to match results.\n   *\n   */\n  tokenize(query, respect_word_boundaries, weights) {\n    if (!query || !query.length) return [];\n    const tokens = [];\n    const words = query.split(/\\s+/);\n    var field_regex;\n\n    if (weights) {\n      field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n    }\n\n    words.forEach(word => {\n      let field_match;\n      let field = null;\n      let regex = null; // look for \"field:query\" tokens\n\n      if (field_regex && (field_match = word.match(field_regex))) {\n        field = field_match[1];\n        word = field_match[2];\n      }\n\n      if (word.length > 0) {\n        if (this.settings.diacritics) {\n          regex = getPattern(word) || null;\n        } else {\n          regex = escape_regex(word);\n        }\n\n        if (regex && respect_word_boundaries) regex = \"\\\\b\" + regex;\n      }\n\n      tokens.push({\n        string: word,\n        regex: regex ? new RegExp(regex, 'iu') : null,\n        field: field\n      });\n    });\n    return tokens;\n  }\n\n  /**\n   * Returns a function to be used to score individual results.\n   *\n   * Good matches will have a higher score than poor matches.\n   * If an item is not a match, 0 will be returned by the function.\n   *\n   * @returns {T.ScoreFn}\n   */\n  getScoreFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getScoreFunction(search);\n  }\n  /**\n   * @returns {T.ScoreFn}\n   *\n   */\n\n\n  _getScoreFunction(search) {\n    const tokens = search.tokens,\n          token_count = tokens.length;\n\n    if (!token_count) {\n      return function () {\n        return 0;\n      };\n    }\n\n    const fields = search.options.fields,\n          weights = search.weights,\n          field_count = fields.length,\n          getAttrFn = search.getAttrFn;\n\n    if (!field_count) {\n      return function () {\n        return 1;\n      };\n    }\n    /**\n     * Calculates the score of an object\n     * against the search query.\n     *\n     */\n\n\n    const scoreObject = function () {\n      if (field_count === 1) {\n        return function (token, data) {\n          const field = fields[0].field;\n          return scoreValue(getAttrFn(data, field), token, weights[field] || 1);\n        };\n      }\n\n      return function (token, data) {\n        var sum = 0; // is the token specific to a field?\n\n        if (token.field) {\n          const value = getAttrFn(data, token.field);\n\n          if (!token.regex && value) {\n            sum += 1 / field_count;\n          } else {\n            sum += scoreValue(value, token, 1);\n          }\n        } else {\n          iterate(weights, (weight, field) => {\n            sum += scoreValue(getAttrFn(data, field), token, weight);\n          });\n        }\n\n        return sum / field_count;\n      };\n    }();\n\n    if (token_count === 1) {\n      return function (data) {\n        return scoreObject(tokens[0], data);\n      };\n    }\n\n    if (search.options.conjunction === 'and') {\n      return function (data) {\n        var score,\n            sum = 0;\n\n        for (let token of tokens) {\n          score = scoreObject(token, data);\n          if (score <= 0) return 0;\n          sum += score;\n        }\n\n        return sum / token_count;\n      };\n    } else {\n      return function (data) {\n        var sum = 0;\n        iterate(tokens, token => {\n          sum += scoreObject(token, data);\n        });\n        return sum / token_count;\n      };\n    }\n  }\n\n  /**\n   * Returns a function that can be used to compare two\n   * results, for sorting purposes. If no sorting should\n   * be performed, `null` will be returned.\n   *\n   * @return function(a,b)\n   */\n  getSortFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getSortFunction(search);\n  }\n\n  _getSortFunction(search) {\n    var implicit_score,\n        sort_flds = [];\n    const self = this,\n          options = search.options,\n          sort = !search.query && options.sort_empty ? options.sort_empty : options.sort;\n\n    if (typeof sort == 'function') {\n      return sort.bind(this);\n    }\n    /**\n     * Fetches the specified sort field value\n     * from a search result item.\n     *\n     */\n\n\n    const get_field = function get_field(name, result) {\n      if (name === '$score') return result.score;\n      return search.getAttrFn(self.items[result.id], name);\n    }; // parse options\n\n\n    if (sort) {\n      for (let s of sort) {\n        if (search.query || s.field !== '$score') {\n          sort_flds.push(s);\n        }\n      }\n    } // the \"$score\" field is implied to be the primary\n    // sort field, unless it's manually specified\n\n\n    if (search.query) {\n      implicit_score = true;\n\n      for (let fld of sort_flds) {\n        if (fld.field === '$score') {\n          implicit_score = false;\n          break;\n        }\n      }\n\n      if (implicit_score) {\n        sort_flds.unshift({\n          field: '$score',\n          direction: 'desc'\n        });\n      } // without a search.query, all items will have the same score\n\n    } else {\n      sort_flds = sort_flds.filter(fld => fld.field !== '$score');\n    } // build function\n\n\n    const sort_flds_count = sort_flds.length;\n\n    if (!sort_flds_count) {\n      return null;\n    }\n\n    return function (a, b) {\n      var result, field;\n\n      for (let sort_fld of sort_flds) {\n        field = sort_fld.field;\n        let multiplier = sort_fld.direction === 'desc' ? -1 : 1;\n        result = multiplier * cmp(get_field(field, a), get_field(field, b));\n        if (result) return result;\n      }\n\n      return 0;\n    };\n  }\n\n  /**\n   * Parses a search query and returns an object\n   * with tokens and fields ready to be populated\n   * with results.\n   *\n   */\n  prepareSearch(query, optsUser) {\n    const weights = {};\n    var options = Object.assign({}, optsUser);\n    propToArray(options, 'sort');\n    propToArray(options, 'sort_empty'); // convert fields to new format\n\n    if (options.fields) {\n      propToArray(options, 'fields');\n      const fields = [];\n      options.fields.forEach(field => {\n        if (typeof field == 'string') {\n          field = {\n            field: field,\n            weight: 1\n          };\n        }\n\n        fields.push(field);\n        weights[field.field] = 'weight' in field ? field.weight : 1;\n      });\n      options.fields = fields;\n    }\n\n    return {\n      options: options,\n      query: query.toLowerCase().trim(),\n      tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n      total: 0,\n      items: [],\n      weights: weights,\n      getAttrFn: options.nesting ? getAttrNesting : getAttr\n    };\n  }\n\n  /**\n   * Searches through all items and returns a sorted array of matches.\n   *\n   */\n  search(query, options) {\n    var self = this,\n        score,\n        search;\n    search = this.prepareSearch(query, options);\n    options = search.options;\n    query = search.query; // generate result scoring function\n\n    const fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n\n    if (query.length) {\n      iterate(self.items, (item, id) => {\n        score = fn_score(item);\n\n        if (options.filter === false || score > 0) {\n          search.items.push({\n            'score': score,\n            'id': id\n          });\n        }\n      });\n    } else {\n      iterate(self.items, (_, id) => {\n        search.items.push({\n          'score': 1,\n          'id': id\n        });\n      });\n    }\n\n    const fn_sort = self._getSortFunction(search);\n\n    if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n    search.total = search.items.length;\n\n    if (typeof options.limit === 'number') {\n      search.items = search.items.slice(0, options.limit);\n    }\n\n    return search;\n  }\n\n}\n\nexport { Sifter };\n//# sourceMappingURL=sifter.js.map\n","\nimport { asciifold } from '@orchidjs/unicode-variants';\nimport * as T from './types';\n\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttr = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    return obj[name];\n};\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttrNesting = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    var part, names = name.split(\".\");\n\twhile( (part = names.shift()) && (obj = obj[part]));\n    return obj;\n};\n\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\nexport const scoreValue = (value:string, token:T.Token, weight:number ):number => {\n\tvar score, pos;\n\n\tif (!value) return 0;\n\n\tvalue = value + '';\n\tif( token.regex == null ) return 0;\n\tpos = value.search(token.regex);\n\tif (pos === -1) return 0;\n\n\tscore = token.string.length / value.length;\n\tif (pos === 0) score += 0.5;\n\n\treturn score * weight;\n};\n\n\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\nexport const propToArray = (obj:{[key:string]:any}, key:string) => {\n\tvar value = obj[key];\n\n\tif( typeof value == 'function' ) return value;\n\n\tif( value && !Array.isArray(value) ){\n\t\tobj[key] = [value];\n\t}\n}\n\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object:[]|{[key:string]:any}, callback:(value:any,key:any)=>any) => {\n\n\tif ( Array.isArray(object)) {\n\t\tobject.forEach(callback);\n\n\t}else{\n\n\t\tfor (var key in object) {\n\t\t\tif (object.hasOwnProperty(key)) {\n\t\t\t\tcallback(object[key], key);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\nexport const cmp = (a:number|string, b:number|string) => {\n\tif (typeof a === 'number' && typeof b === 'number') {\n\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t}\n\ta = asciifold(a + '').toLowerCase();\n\tb = asciifold(b + '').toLowerCase();\n\tif (a > b) return 1;\n\tif (b > a) return -1;\n\treturn 0;\n};\n","\nimport { iterate } from '@orchidjs/sifter/lib/utils';\n\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport const getDom = ( query:any ):HTMLElement => {\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( isHtmlString(query) ){\n\t\tvar tpl = document.createElement('template');\n\t\ttpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn tpl.content.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport const isHtmlString = (arg:any): boolean => {\n\tif( typeof arg === 'string' && arg.indexOf('<') > -1 ){\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport const escapeQuery = (query:string):string => {\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport const classesArray = (args:string[]|string[][]):string[] => {\n\tvar classes:string[] = [];\n\titerate( args, (_classes) =>{\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t});\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport const castAsArray = (arg:any):Array<any> => {\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport const isEmptyObject = (obj:object):boolean => {\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string|number }) => {\n\titerate( attrs,(val,attr) => {\n\t\tif( val == null ){\n\t\t\tel.removeAttribute(attr as string);\n\t\t}else{\n\t\t\tel.setAttribute(attr as string, ''+val);\n\t\t}\n\t});\n}\n\n\n/**\n * Replace a node\n */\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\n}\n","/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nimport {replaceNode} from '../vanilla';\n\n\nexport const highlight = (element:HTMLElement, regex:string|RegExp) => {\n\n\tif( regex === null ) return;\n\n\t// convet string to regex\n\tif( typeof regex === 'string' ){\n\n\t\tif( !regex.length ) return;\n\t\tregex = new RegExp(regex, 'i');\n\t}\n\n\n\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\tconst highlightText = ( node:Text ):number => {\n\n\t\tvar match = node.data.match(regex);\n\t\tif( match && node.data.length > 0 ){\n\t\t\tvar spannode\t\t= document.createElement('span');\n\t\t\tspannode.className\t= 'highlight';\n\t\t\tvar middlebit\t\t= node.splitText(match.index as number);\n\n\t\t\tmiddlebit.splitText(match[0]!.length);\n\t\t\tvar middleclone\t\t= middlebit.cloneNode(true);\n\n\t\t\tspannode.appendChild(middleclone);\n\t\t\treplaceNode(middlebit, spannode);\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t};\n\n\t// Recurse element node, looking for child text nodes to highlight, unless element\n\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\tconst highlightChildren = ( node:Element ):void => {\n\t\tif( node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' ) ){\n\t\t\tArray.from(node.childNodes).forEach(element => {\n\t\t\t\thighlightRecursive(element);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tconst highlightRecursive = ( node:Node|Element ):number => {\n\n\t\tif( node.nodeType === 3 ){\n\t\t\treturn highlightText(node as Text);\n\t\t}\n\n\t\thighlightChildren(node as Element);\n\n\t\treturn 0;\n\t};\n\n\thighlightRecursive( element );\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport const removeHighlight = (el:HTMLElement) => {\n\tvar elements = el.querySelectorAll(\"span.highlight\");\n\tArray.prototype.forEach.call(elements, function(el:HTMLElement){\n\t\tvar parent = el.parentNode as Node;\n\t\tparent.replaceChild(el.firstChild as Node, el);\n\t\tparent.normalize();\n\t});\n};\n","export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n","\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\t//closeAfterSelect: false,\n\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-wrapper',\n\tcontrolClass: 'ts-control',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\tcontrolInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\n\n\tcopyClassesToDropdown: false,\n\n\tplaceholder: null,\n\thidePlaceholder: null,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n","\nimport TomSelect from './tom-select';\nimport { TomLoadCallback } from './types/index';\n\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport const hash_key = (value:undefined|null|boolean|string|number):string|null => {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport const get_hash = (value:boolean|string|number):string => {\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport const escape_html = (str:string):string => {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * Debounce the user provided load function\n *\n */\nexport const loadDebounce = (fn:(value:string,callback:TomLoadCallback) => void,delay:number) => {\n\tvar timeout: null|ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:TomLoadCallback) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n};\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\n\tvar type:string;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor( type of types ){\n\t\tif( type in event_args ){\n\t\t\ttrigger.apply(self, event_args[type]);\n\t\t}\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n */\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Prevent default\n *\n */\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\n\ttarget.addEventListener(type,callback,options);\n};\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport const getId = (el:Element,id:string) => {\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n};\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport const addSlashes = (str:string):string => {\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n\n/**\n *\n */\nexport const append = ( parent:Element|DocumentFragment, node: string|Node|null|undefined ):void =>{\n\tif( node ) parent.append(node);\n};\n","import defaults from './defaults';\nimport { hash_key } from './utils';\nimport { TomOption, TomSettings } from './types/index';\nimport { iterate } from '@orchidjs/sifter/lib/utils';\nimport { TomInput } from './types/index';\n\n\nexport default function getSettings( input:TomInput, settings_user:Partial<TomSettings>):TomSettings{\n\tvar settings:TomSettings\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element:{\n\t\tplaceholder\t: null|string,\n\t\toptions\t\t: TomOption[],\n\t\toptgroups\t: TomOption[],\n\t\titems\t\t: string[],\n\t\tmaxItems\t: null|number,\n\t} = {\n\t\tplaceholder\t: placeholder,\n\t\toptions\t\t: [],\n\t\toptgroups\t: [],\n\t\titems\t\t: [],\n\t\tmaxItems\t: null,\n\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap:{[key:string]:any} = {};\n\t\tvar group_count = 1;\n\n\t\tvar readData = (el:HTMLElement):TomOption => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option:HTMLOptionElement, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif ( value == null ) return;\n\t\t\tif ( !value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}else{\n\n\t\t\t\tvar option_data             = readData(option);\n\t\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\t\t\t\toption_data.$option\t\t\t= option;\n\n\t\t\t\toptionsMap[value] = option_data;\n\t\t\t\toptions.push(option_data);\n\t\t\t}\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup:HTMLOptGroupElement ) => {\n\t\t\tvar id:string, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\titerate(optgroup.children, (option)=>{\n\t\t\t\taddOption(option as HTMLOptionElement, id);\n\t\t\t});\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\titerate(input.children,(child)=>{\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child as HTMLOptGroupElement);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child as HTMLOptionElement);\n\t\t\t}\n\t\t});\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tconst data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tconst values = value.split(settings.delimiter);\n\n\t\t\titerate( values, (value) => {\n\t\t\t\tconst option:TomOption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t});\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\titerate( settings_element.options, (opt) => {\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n","\nimport MicroEvent from './contrib/microevent';\nimport MicroPlugin from './contrib/microplugin';\nimport { Sifter, iterate } from '@orchidjs/sifter';\nimport { escape_regex } from '@orchidjs/unicode-variants';\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback, TomItem, TomSettings, TomTemplateNames, TomClearFilter } from './types/index';\nimport {highlight, removeHighlight} from './contrib/highlight';\nimport * as constants from './constants';\nimport getSettings from './getSettings';\nimport {\n\thash_key,\n\tget_hash,\n\tescape_html,\n\tdebounce_events,\n\tgetSelection,\n\tpreventDefault,\n\taddEvent,\n\tloadDebounce,\n\tisKeyDown,\n\tgetId,\n\taddSlashes,\n\tappend\n} from './utils';\n\nimport {\n\tgetDom,\n\tisHtmlString,\n\tescapeQuery,\n\ttriggerEvent,\n\tapplyCSS,\n\taddClasses,\n\tremoveClasses,\n\tparentMatch,\n\tgetTail,\n\tisEmptyObject,\n\tnodeIndex,\n\tsetAttr,\n\treplaceNode\n} from './vanilla';\n\nvar instance_i = 0;\n\nexport default class TomSelect extends MicroPlugin(MicroEvent){\n\n\tpublic control_input\t\t\t: HTMLInputElement;\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\n\tpublic control\t\t\t\t\t: HTMLElement;\n\tpublic dropdown_content\t\t\t: HTMLElement;\n\tpublic focus_node\t\t\t\t: HTMLElement;\n\n\tpublic order\t\t\t\t\t: number = 0;\n\tpublic settings\t\t\t\t\t: TomSettings;\n\tpublic input\t\t\t\t\t: TomInput;\n\tpublic tabIndex\t\t\t\t\t: number;\n\tpublic is_select_tag\t\t\t: boolean;\n\tpublic rtl\t\t\t\t\t\t: boolean;\n\tprivate inputId\t\t\t\t\t: string;\n\n\tprivate _destroy\t\t\t\t!: () => void;\n\tpublic sifter\t\t\t\t\t: Sifter;\n\n\n\tpublic isOpen\t\t\t\t\t: boolean = false;\n\tpublic isDisabled\t\t\t\t: boolean = false;\n\tpublic isRequired\t\t\t\t: boolean;\n\tpublic isInvalid\t\t\t\t: boolean = false; // @deprecated 1.8\n\tpublic isValid\t\t\t\t\t: boolean = true;\n\tpublic isLocked\t\t\t\t\t: boolean = false;\n\tpublic isFocused\t\t\t\t: boolean = false;\n\tpublic isInputHidden\t\t\t: boolean = false;\n\tpublic isSetup\t\t\t\t\t: boolean = false;\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\n\tpublic ignoreHover\t\t\t\t: boolean = false;\n\tpublic hasOptions\t\t\t\t: boolean = false;\n\tpublic currentResults\t\t\t?: ReturnType<Sifter['search']>;\n\tpublic lastValue\t\t\t\t: string = '';\n\tpublic caretPos\t\t\t\t\t: number = 0;\n\tpublic loading\t\t\t\t\t: number = 0;\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\n\n\tpublic activeOption\t\t\t\t: null|HTMLElement = null;\n\tpublic activeItems\t\t\t\t: TomItem[] = [];\n\n\tpublic optgroups\t\t\t\t: TomOptions = {};\n\tpublic options\t\t\t\t\t: TomOptions = {};\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\n\tpublic items\t\t\t\t\t: string[] = [];\n\n\n\n\tconstructor( input_arg: string|TomInput, user_settings:Partial<TomSettings> ){\n\t\tsuper();\n\n\t\tinstance_i++;\n\n\t\tvar dir;\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\n\n\t\tif( input.tomselect ){\n\t\t\tthrow new Error('Tom Select already initialized on this element');\n\t\t}\n\n\n\t\tinput.tomselect\t\t\t= this;\n\n\n\t\t// detect rtl environment\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\n\n\t\t// setup default state\n\t\tconst settings\t\t\t= getSettings( input, user_settings );\n\t\tthis.settings\t\t\t= settings;\n\t\tthis.input\t\t\t\t= input;\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\n\t\tthis.isRequired\t\t\t= input.required;\n\n\n\t\t// search system\n\t\tthis.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\n\t\t// option-dependent defaults\n\t\tsettings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof settings.hideSelected !== 'boolean') {\n\t\t\tsettings.hideSelected = settings.mode === 'multi';\n\t\t}\n\n\t\tif( typeof settings.hidePlaceholder !== 'boolean' ){\n\t\t\tsettings.hidePlaceholder = settings.mode !== 'multi';\n\t\t}\n\n\t\t// set up createFilter callback\n\t\tvar filter = settings.createFilter;\n\t\tif( typeof filter !== 'function' ){\n\n\t\t\tif( typeof filter === 'string' ){\n\t\t\t\tfilter = new RegExp(filter);\n\t\t\t}\n\n\t\t\tif( filter instanceof RegExp ){\n\t\t\t\tsettings.createFilter = (input) => (filter as RegExp).test(input);\n\t\t\t}else{\n\t\t\t\tsettings.createFilter = (value) => {\n\t\t\t\t\treturn this.settings.duplicates || !this.options[value];\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\n\t\tthis.initializePlugins(settings.plugins);\n\t\tthis.setupCallbacks();\n\t\tthis.setupTemplates();\n\n\n\t\t// Create all elements\n\t\tconst wrapper\t\t\t= getDom('<div>');\n\t\tconst control\t\t\t= getDom('<div>');\n\t\tconst dropdown\t\t\t= this._render('dropdown');\n\t\tconst dropdown_content\t= getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n\n\t\tconst classes\t\t\t= this.input.getAttribute('class') || '';\n\t\tconst inputMode\t\t\t= settings.mode;\n\n\t\tvar control_input: HTMLInputElement;\n\n\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\n\n\n\t\taddClasses(control,settings.controlClass);\n\t\tappend( wrapper, control );\n\n\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\n\t\tif( settings.copyClassesToDropdown ){\n\t\t\taddClasses( dropdown, classes);\n\t\t}\n\n\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\n\t\tappend( dropdown, dropdown_content );\n\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\n\n\n\t\t// default controlInput\n\t\tif( isHtmlString(settings.controlInput) ){\n\t\t\tcontrol_input\t\t= getDom(settings.controlInput ) as HTMLInputElement;\n\n\t\t\t// set attributes\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete'];\n\t\t\titerate(attrs,(attr:string) => {\n\t\t\t\tif( input.getAttribute(attr) ){\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcontrol_input.tabIndex = -1;\n\t\t\tcontrol.appendChild( control_input );\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t// dom element\n\t\t}else if( settings.controlInput ){\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t}else{\n\t\t\tcontrol_input\t\t= getDom('<input/>') as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control;\n\t\t}\n\n\t\tthis.wrapper\t\t\t= wrapper;\n\t\tthis.dropdown\t\t\t= dropdown;\n\t\tthis.dropdown_content\t= dropdown_content;\n\t\tthis.control \t\t\t= control;\n\t\tthis.control_input\t\t= control_input;\n\n\t\tthis.setup();\n\t}\n\n\t/**\n\t * set up event bindings.\n\t *\n\t */\n\tsetup(){\n\n\t\tconst self = this;\n\t\tconst settings\t\t\t\t= self.settings;\n\t\tconst control_input\t\t\t= self.control_input;\n\t\tconst dropdown\t\t\t\t= self.dropdown;\n\t\tconst dropdown_content\t\t= self.dropdown_content;\n\t\tconst wrapper\t\t\t\t= self.wrapper;\n\t\tconst control\t\t\t\t= self.control;\n\t\tconst input\t\t\t\t\t= self.input;\n\t\tconst focus_node\t\t\t= self.focus_node;\n\t\tconst passive_event\t\t\t= { passive: true };\n\t\tconst listboxId\t\t\t\t= self.inputId +'-ts-dropdown';\n\n\n\t\tsetAttr(dropdown_content,{\n\t\t\tid: listboxId\n\t\t});\n\n\t\tsetAttr(focus_node,{\n\t\t\trole:'combobox',\n\t\t\t'aria-haspopup':'listbox',\n\t\t\t'aria-expanded':'false',\n\t\t\t'aria-controls':listboxId\n\t\t});\n\n\t\tconst control_id\t= getId(focus_node,self.inputId + '-ts-control');\n\t\tconst query\t\t\t= \"label[for='\"+escapeQuery(self.inputId)+\"']\";\n\t\tconst label\t\t\t= document.querySelector(query);\n\t\tconst label_click\t= self.focus.bind(self);\n\t\tif( label ){\n\t\t\taddEvent(label,'click', label_click );\n\t\t\tsetAttr(label,{for:control_id});\n\t\t\tconst label_id = getId(label,self.inputId+'-ts-label');\n\t\t\tsetAttr(focus_node,{'aria-labelledby':label_id});\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\n\t\t}\n\n\t\twrapper.style.width = input.style.width;\n\n\t\tif (self.plugins.names.length) {\n\t\t\tconst classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\n\t\t}\n\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\n\t\t\tsetAttr(input,{multiple:'multiple'});\n\t\t}\n\n\t\tif (settings.placeholder) {\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\n\t\t}\n\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\tif (!settings.splitOn && settings.delimiter) {\n\t\t\tsettings.splitOn = new RegExp('\\\\s*' + escape_regex(settings.delimiter) + '+\\\\s*');\n\t\t}\n\n\t\t// debounce user defined load() if loadThrottle > 0\n\t\t// after initializePlugins() so plugins can create/modify user defined loaders\n\t\tif( settings.load && settings.loadThrottle ){\n\t\t\tsettings.load = loadDebounce(settings.load,settings.loadThrottle)\n\t\t}\n\n\t\tself.control_input.type\t= input.type;\n\n\t\taddEvent(dropdown,'mousemove', () => {\n\t\t\tself.ignoreHover = false;\n\t\t});\n\n\t\taddEvent(dropdown,'mouseenter', (e) => {\n\n\t\t\tvar target_match = parentMatch(e.target as HTMLElement, '[data-selectable]', dropdown);\n\t\t\tif( target_match ) self.onOptionHover( e as MouseEvent, target_match );\n\n\t\t}, {capture:true});\n\n\t\t// clicking on an option should select it\n\t\taddEvent(dropdown,'click',(evt) => {\n\t\t\tconst option = parentMatch(evt.target as HTMLElement, '[data-selectable]');\n\t\t\tif( option ){\n\t\t\t\tself.onOptionSelect( evt as MouseEvent, option );\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\t\t});\n\n\t\taddEvent(control,'click', (evt) => {\n\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '[data-ts-item]', control);\n\t\t\tif( target_match && self.onItemSelect(evt as MouseEvent, target_match as TomItem) ){\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// retain focus (see control_input mousedown)\n\t\t\tif( control_input.value != '' ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.onClick();\n\t\t\tpreventDefault(evt,true);\n\t\t});\n\n\n\t\t// keydown on focus_node for arrow_down/arrow_up\n\t\taddEvent(focus_node,'keydown',\t\t(e) => self.onKeyDown(e as KeyboardEvent) );\n\n\t\t// keypress and input/keyup\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\n\t\taddEvent(control_input,'input',\t\t(e) => self.onInput(e as KeyboardEvent) );\n\n\t\taddEvent(focus_node,'resize',\t\t() => self.positionDropdown(), passive_event);\n\t\taddEvent(focus_node,'blur', \t\t(e) => self.onBlur(e as FocusEvent) );\n\t\taddEvent(focus_node,'focus',\t\t(e) => self.onFocus(e as MouseEvent) );\n\t\taddEvent(control_input,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\n\n\n\t\tconst doc_mousedown = (evt:Event) => {\n\n\t\t\t// blur if target is outside of this instance\n\t\t\t// dropdown is not always inside wrapper\n\t\t\tconst target = evt.composedPath()[0];\n\t\t\tif( !wrapper.contains(target as HTMLElement) && !dropdown.contains(target as HTMLElement) ){\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.blur();\n\t\t\t\t}\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\t// retain focus by preventing native handling. if the\n\t\t\t// event target is the input it should not be modified.\n\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t// Fixes bug #212 which is no covered by tests\n\t\t\tif( target == control_input && self.isOpen ){\n\t\t\t\tevt.stopPropagation();\n\n\t\t\t// clicking anywhere in the control should not blur the control_input (which would close the dropdown)\n\t\t\t}else{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\n\t\t};\n\n\t\tconst win_scroll = () => {\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.positionDropdown();\n\t\t\t}\n\t\t};\n\n\n\t\taddEvent(document,'mousedown', doc_mousedown);\n\t\taddEvent(window,'scroll', win_scroll, passive_event);\n\t\taddEvent(window,'resize', win_scroll, passive_event);\n\n\t\tthis._destroy = () => {\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\n\t\t\twindow.removeEventListener('scroll',win_scroll);\n\t\t\twindow.removeEventListener('resize',win_scroll);\n\t\t\tif( label ) label.removeEventListener('click',label_click);\n\t\t};\n\n\t\t// store original html and tab index so that they can be\n\t\t// restored when the destroy() method is called.\n\t\tthis.revertSettings = {\n\t\t\tinnerHTML : input.innerHTML,\n\t\t\ttabIndex : input.tabIndex\n\t\t};\n\n\n\t\tinput.tabIndex = -1;\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\n\n\t\tself.sync(false);\n\t\tsettings.items = [];\n\t\tdelete settings.optgroups;\n\t\tdelete settings.options;\n\n\t\taddEvent(input,'invalid', () => {\n\t\t\tif( self.isValid ){\n\t\t\t\tself.isValid = false;\n\t\t\t\tself.isInvalid = true;\n\t\t\t\tself.refreshState();\n\t\t\t}\n\t\t});\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshItems();\n\t\tself.close(false);\n\t\tself.inputState();\n\t\tself.isSetup = true;\n\n\t\tif( input.disabled ){\n\t\t\tself.disable();\n\t\t}else{\n\t\t\tself.enable(); //sets tabIndex\n\t\t}\n\n\t\tself.on('change', this.onChange);\n\n\t\taddClasses(input,'tomselected','ts-hidden-accessible');\n\t\tself.trigger('initialize');\n\n\t\t// preload options\n\t\tif (settings.preload === true) {\n\t\t\tself.preload();\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Register options and optgroups\n\t *\n\t */\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\n\n\t\t// build options table\n\t\tthis.addOptions(options);\n\n\n\t\t// build optgroup table\n\t\titerate( optgroups, (optgroup:TomOption) => {\n\t\t\tthis.registerOptionGroup(optgroup);\n\t\t});\n\t}\n\n\t/**\n\t * Sets up default rendering functions.\n\t */\n\tsetupTemplates() {\n\t\tvar self = this;\n\t\tvar field_label = self.settings.labelField;\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\tvar templates = {\n\t\t\t'optgroup': (data:TomOption) => {\n\t\t\t\tlet optgroup = document.createElement('div');\n\t\t\t\toptgroup.className = 'optgroup';\n\t\t\t\toptgroup.appendChild(data.options);\n\t\t\t\treturn optgroup;\n\n\t\t\t},\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t},\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t},\n\t\t\t'no_results':() => {\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\n\t\t\t},\n\t\t\t'loading':() => {\n\t\t\t\treturn '<div class=\"spinner\"></div>';\n\t\t\t},\n\t\t\t'not_loading':() => {},\n\t\t\t'dropdown':() => {\n\t\t\t\treturn '<div></div>';\n\t\t\t}\n\t\t};\n\n\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\n\t}\n\n\t/**\n\t * Maps fired events to callbacks provided\n\t * in the settings used when creating the control.\n\t */\n\tsetupCallbacks() {\n\t\tvar key, fn;\n\t\tvar callbacks:{[key:string]:string} = {\n\t\t\t'initialize'      : 'onInitialize',\n\t\t\t'change'          : 'onChange',\n\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t'item_select'     : 'onItemSelect',\n\t\t\t'clear'           : 'onClear',\n\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t'type'            : 'onType',\n\t\t\t'load'            : 'onLoad',\n\t\t\t'focus'           : 'onFocus',\n\t\t\t'blur'            : 'onBlur'\n\t\t};\n\n\t\tfor (key in callbacks) {\n\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\n\t\t\tif (fn) this.on(key, fn);\n\n\t\t}\n\t}\n\n\t/**\n\t * Sync the Tom Select instance with the original input or select\n\t *\n\t */\n\tsync(get_settings:boolean=true):void{\n\t\tconst self\t\t= this;\n\t\tconst settings\t= get_settings ? getSettings( self.input, {delimiter:self.settings.delimiter} as TomSettings ) : self.settings;\n\n\t\tself.setupOptions(settings.options,settings.optgroups);\n\n\t\tself.setValue(settings.items||[],true); // silent prevents recursion\n\n\t\tself.lastQuery = null; // so updated options will be displayed in dropdown\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a click event.\n\t *\n\t */\n\tonClick():void {\n\t\tvar self = this;\n\n\t\tif( self.activeItems.length > 0 ){\n\t\t\tself.clearActiveItems();\n\t\t\tself.focus();\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.isFocused && self.isOpen ){\n\t\t\tself.blur();\n\t\t} else {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated v1.7\n\t *\n\t */\n\tonMouseDown():void {}\n\n\t/**\n\t * Triggered when the value of the control has been changed.\n\t * This should propagate the event to the original DOM\n\t * input / select element.\n\t */\n\tonChange() {\n\t\ttriggerEvent(this.input, 'input');\n\t\ttriggerEvent(this.input, 'change');\n\t}\n\n\t/**\n\t * Triggered on <input> paste.\n\t *\n\t */\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif( self.isInputHidden || self.isLocked ){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// If a regex or string is included, this will split the pasted\n\t\t// input and create Items for each separate value\n\t\tif( !self.settings.splitOn ){\n\t\t\treturn;\n\t\t}\n\n\t\t// Wait for pasted text to be recognized in value\n\t\tsetTimeout(() => {\n\t\t\tvar pastedText = self.inputValue();\n\t\t\tif( !pastedText.match(self.settings.splitOn)){\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\n\t\t\titerate( splitInput, (piece:string) => {\n\n\t\t\t\tconst hash = hash_key(piece);\n\t\t\t\tif( hash ){\n\t\t\t\t\tif( this.options[piece] ){\n\t\t\t\t\t\tself.addItem(piece);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tself.createItem(piece);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}, 0);\n\n\t}\n\n\t/**\n\t * Triggered on <input> keypress.\n\t *\n\t */\n\tonKeyPress(e:KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif(self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t\t\tself.createItem();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keydown.\n\t *\n\t */\n\tonKeyDown(e:KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tself.ignoreHover = true;\n\n\t\tif (self.isLocked) {\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\tpreventDefault(e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\t// ctrl+A: select all\n\t\t\tcase constants.KEY_A:\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\t\t\tif( self.control_input.value == '' ){\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// esc: close dropdown\n\t\t\tcase constants.KEY_ESC:\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tpreventDefault(e,true);\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\n\t\t\t// down: open dropdown or move selection down\n\t\t\tcase constants.KEY_DOWN:\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\tself.open();\n\t\t\t\t} else if (self.activeOption) {\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\n\t\t\t\t\tif (next) self.setActiveOption(next);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// up: move selection up\n\t\t\tcase constants.KEY_UP:\n\t\t\t\tif (self.activeOption) {\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// return: select active option\n\t\t\tcase constants.KEY_RETURN:\n\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// if the option_create=null, the dropdown might be closed\n\t\t\t\t}else if (self.settings.create && self.createItem()) {\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// don't submit form when searching for a value\n\t\t\t\t}else if( document.activeElement == self.control_input && self.isOpen ){\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t// left: modifiy item selection to the left\n\t\t\tcase constants.KEY_LEFT:\n\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\treturn;\n\n\t\t\t// right: modifiy item selection to the right\n\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\treturn;\n\n\t\t\t// tab: select active option and/or create item\n\t\t\tcase constants.KEY_TAB:\n\n\t\t\t\tif( self.settings.selectOnTab ){\n\t\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\n\t\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\n\t\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// delete|backspace: delete items\n\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\tcase constants.KEY_DELETE:\n\t\t\t\tself.deleteSelection(e);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// don't enter text in the control_input when active items are selected\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keyup.\n\t *\n\t */\n\tonInput(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif( self.isLocked ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar value = self.inputValue();\n\t\tif (self.lastValue !== value) {\n\t\t\tself.lastValue = value;\n\n\t\t\tif( self.settings.shouldLoad.call(self,value) ){\n\t\t\t\tself.load(value);\n\t\t\t}\n\n\t\t\tself.refreshOptions();\n\t\t\tself.trigger('type', value);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the user rolls over\n\t * an option in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionHover( evt:MouseEvent|KeyboardEvent, option:HTMLElement ):void{\n\t\tif( this.ignoreHover ) return;\n\t\tthis.setActiveOption(option, false);\n\t}\n\n\t/**\n\t * Triggered on <input> focus.\n\t *\n\t */\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tvar wasFocused = self.isFocused;\n\n\t\tif (self.isDisabled) {\n\t\t\tself.blur();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (self.ignoreFocus) return;\n\t\tself.isFocused = true;\n\t\tif( self.settings.preload === 'focus' ) self.preload();\n\n\t\tif (!wasFocused) self.trigger('focus');\n\n\t\tif (!self.activeItems.length) {\n\t\t\tself.showInput();\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t}\n\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Triggered on <input> blur.\n\t *\n\t */\n\tonBlur(e?:FocusEvent):void {\n\n\t\tif( document.hasFocus() === false ) return;\n\n\t\tvar self = this;\n\t\tif (!self.isFocused) return;\n\t\tself.isFocused = false;\n\t\tself.ignoreFocus = false;\n\n\t\tvar deactivate = () => {\n\t\t\tself.close();\n\t\t\tself.setActiveItem();\n\t\t\tself.setCaret(self.items.length);\n\t\t\tself.trigger('blur');\n\t\t};\n\n\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\tself.createItem(null, deactivate);\n\t\t} else {\n\t\t\tdeactivate();\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered when the user clicks on an option\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\n\t\tvar value, self = this;\n\n\n\t\t// should not be possible to trigger a option under a disabled optgroup\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\n\t\t\treturn;\n\t\t}\n\n\n\t\tif( option.classList.contains('create') ){\n\t\t\tself.createItem(null, () => {\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvalue = option.dataset.value;\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.addItem(value);\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( !self.settings.hideSelected && evt.type && /click/.test(evt.type) ){\n\t\t\t\t\tself.setActiveOption(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return true if the given option can be selected\n\t *\n\t */\n\tcanSelect(option:HTMLElement|null):boolean{\n\n\t\tif( this.isOpen && option && this.dropdown_content.contains(option) ) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an item\n\t * that has been selected.\n\t *\n\t */\n\tonItemSelect( evt?:MouseEvent, item?:TomItem ):boolean{\n\t\tvar self = this;\n\n\t\tif( !self.isLocked && self.settings.mode === 'multi' ){\n\t\t\tpreventDefault(evt);\n\t\t\tself.setActiveItem(item, evt);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Determines whether or not to invoke\n\t * the user-provided option provider / loader\n\t *\n\t * Note, there is a subtle difference between\n\t * this.canLoad() and this.settings.shouldLoad();\n\t *\n\t *\t- settings.shouldLoad() is a user-input validator.\n\t *\tWhen false is returned, the not_loading template\n\t *\twill be added to the dropdown\n\t *\n\t *\t- canLoad() is lower level validator that checks\n\t * \tthe Tom Select instance. There is no inherent user\n\t *\tfeedback when canLoad returns false\n\t *\n\t */\n\tcanLoad(value:string):boolean{\n\n\t\tif( !this.settings.load ) return false;\n\t\tif( this.loadedSearches.hasOwnProperty(value) ) return false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Invokes the user-provided option provider / loader.\n\t *\n\t */\n\tload(value:string):void {\n\t\tconst self = this;\n\n\t\tif( !self.canLoad(value) ) return;\n\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\n\t\tself.loading++;\n\n\t\tconst callback = self.loadCallback.bind(self);\n\t\tself.settings.load.call(self, value, callback);\n\t}\n\n\t/**\n\t * Invoked by the user-provided option provider\n\t *\n\t */\n\tloadCallback( options:TomOption[], optgroups:TomOption[] ):void{\n\t\tconst self = this;\n\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\tself.lastQuery = null;\n\n\t\tself.clearActiveOption(); // when new results load, focus should be on first option\n\t\tself.setupOptions(options,optgroups);\n\n\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t\tif (!self.loading) {\n\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\n\t\t}\n\n\t\tself.trigger('load', options, optgroups);\n\t}\n\n\tpreload():void{\n\t\tvar classList = this.wrapper.classList;\n\t\tif( classList.contains('preloaded') ) return;\n\t\tclassList.add('preloaded');\n\t\tthis.load('');\n\t}\n\n\n\t/**\n\t * Sets the input field of the control to the specified value.\n\t *\n\t */\n\tsetTextboxValue(value:string = '') {\n\t\tvar input = this.control_input;\n\t\tvar changed = input.value !== value;\n\t\tif (changed) {\n\t\t\tinput.value = value;\n\t\t\ttriggerEvent(input,'update');\n\t\t\tthis.lastValue = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the value of the control. If multiple items\n\t * can be selected (e.g. <select multiple>), this returns\n\t * an array. If only one item can be selected, this\n\t * returns a string.\n\t *\n\t */\n\tgetValue():string|string[] {\n\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t\t\treturn this.items;\n\t\t}\n\n\t\treturn this.items.join(this.settings.delimiter);\n\t}\n\n\t/**\n\t * Resets the selected items to the given value.\n\t *\n\t */\n\tsetValue( value:string|string[], silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events,() => {\n\t\t\tthis.clear(silent);\n\t\t\tthis.addItems(value, silent);\n\t\t});\n\t}\n\n\n\t/**\n\t * Resets the number of max items to the given value\n\t *\n\t */\n\tsetMaxItems(value:null|number){\n\t\tif(value === 0) value = null; //reset to unlimited items.\n\t\tthis.settings.maxItems = value;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Sets the selected item.\n\t *\n\t */\n\tsetActiveItem( item?:TomItem, e?:MouseEvent|KeyboardEvent ){\n\t\tvar self = this;\n\t\tvar eventName;\n\t\tvar i, begin, end, swap;\n\t\tvar last;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\t// clear the active selection\n\t\tif( !item ){\n\t\t\tself.clearActiveItems();\n\t\t\tif (self.isFocused) {\n\t\t\t\tself.showInput();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// modify selection\n\t\teventName = e && e.type.toLowerCase();\n\n\t\tif (eventName === 'click' && isKeyDown('shiftKey',e) && self.activeItems.length) {\n\t\t\tlast\t= self.getLastActive();\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\n\n\t\t\tif (begin > end) {\n\t\t\t\tswap  = begin;\n\t\t\t\tbegin = end;\n\t\t\t\tend   = swap;\n\t\t\t}\n\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\titem = self.control.children[i] as TomItem;\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\n\t\t\t\t\tself.setActiveItemClass(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreventDefault(e);\n\t\t} else if ((eventName === 'click' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tself.removeActiveItem( item );\n\t\t\t} else {\n\t\t\t\tself.setActiveItemClass(item);\n\t\t\t}\n\t\t} else {\n\t\t\tself.clearActiveItems();\n\t\t\tself.setActiveItemClass(item);\n\t\t}\n\n\t\t// ensure control has focus\n\t\tself.hideInput();\n\t\tif (!self.isFocused) {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Set the active and last-active classes\n\t *\n\t */\n\tsetActiveItemClass( item:TomItem ){\n\t\tconst self = this;\n\t\tconst last_active = self.control.querySelector('.last-active');\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\n\n\t\taddClasses(item,'active last-active');\n\t\tself.trigger('item_select', item);\n\t\tif( self.activeItems.indexOf(item) == -1 ){\n\t\t\tself.activeItems.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Remove active item\n\t *\n\t */\n\tremoveActiveItem( item:TomItem ){\n\t\tvar idx = this.activeItems.indexOf(item);\n\t\tthis.activeItems.splice(idx, 1);\n\t\tremoveClasses(item,'active');\n\t}\n\n\t/**\n\t * Clears all the active items\n\t *\n\t */\n\tclearActiveItems(){\n\t\tremoveClasses(this.activeItems,'active');\n\t\tthis.activeItems = [];\n\t}\n\n\t/**\n\t * Sets the selected item in the dropdown menu\n\t * of available options.\n\t *\n\t */\n\tsetActiveOption( option:null|HTMLElement,scroll:boolean=true ):void{\n\n\t\tif( option === this.activeOption ){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearActiveOption();\n\t\tif( !option ) return;\n\n\t\tthis.activeOption = option;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':option.getAttribute('id')});\n\t\tsetAttr(option,{'aria-selected':'true'});\n\t\taddClasses(option,'active');\n\t\tif( scroll ) this.scrollToOption(option);\n\t}\n\n\t/**\n\t * Sets the dropdown_content scrollTop to display the option\n\t *\n\t */\n\tscrollToOption( option:null|HTMLElement, behavior?:string ):void{\n\n\t\tif( !option ) return;\n\n\t\tconst content\t\t= this.dropdown_content;\n\t\tconst height_menu\t= content.clientHeight;\n\t\tconst scrollTop\t\t= content.scrollTop || 0;\n\t\tconst height_item\t= option.offsetHeight;\n\t\tconst y\t\t\t\t= option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t\tif (y + height_item > height_menu + scrollTop) {\n\t\t\tthis.scroll(y - height_menu + height_item, behavior);\n\n\t\t} else if (y < scrollTop) {\n\t\t\tthis.scroll(y, behavior);\n\t\t}\n\t}\n\n\t/**\n\t * Scroll the dropdown to the given position\n\t *\n\t */\n\tscroll( scrollTop:number, behavior?:string ):void{\n\t\tconst content = this.dropdown_content;\n\t\tif( behavior ){\n\t\t\tcontent.style.scrollBehavior = behavior;\n\t\t}\n\t\tcontent.scrollTop = scrollTop;\n\t\tcontent.style.scrollBehavior = '';\n\t}\n\n\t/**\n\t * Clears the active option\n\t *\n\t */\n\tclearActiveOption(){\n\t\tif( this.activeOption ){\n\t\t\tremoveClasses(this.activeOption,'active');\n\t\t\tsetAttr(this.activeOption,{'aria-selected':null});\n\t\t}\n\t\tthis.activeOption = null;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':null});\n\t}\n\n\n\t/**\n\t * Selects all items (CTRL + A).\n\t */\n\tselectAll() {\n\t\tconst self = this;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\tconst activeItems = self.controlChildren();\n\n\t\tif( !activeItems.length ) return;\n\n\t\tself.hideInput();\n\t\tself.close();\n\n\t\tself.activeItems = activeItems;\n\t\titerate( activeItems, (item:TomItem) => {\n\t\t\tself.setActiveItemClass(item);\n\t\t});\n\n\t}\n\n\t/**\n\t * Determines if the control_input should be in a hidden or visible state\n\t *\n\t */\n\tinputState(){\n\t\tvar self = this;\n\n\t\tif( !self.control.contains(self.control_input) ) return;\n\n\t\tsetAttr(self.control_input,{placeholder:self.settings.placeholder});\n\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) ){\n\t\t\tself.setTextboxValue();\n\t\t\tself.isInputHidden = true;\n\n\t\t}else{\n\n\t\t\tif( self.settings.hidePlaceholder && self.items.length > 0 ){\n\t\t\t\tsetAttr(self.control_input,{placeholder:''});\n\t\t\t}\n\t\t\tself.isInputHidden = false;\n\t\t}\n\n\t\tself.wrapper.classList.toggle('input-hidden', self.isInputHidden );\n\t}\n\n\t/**\n\t * Hides the input element out of view, while\n\t * retaining its focus.\n\t * @deprecated 1.3\n\t */\n\thideInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Restores input visibility.\n\t * @deprecated 1.3\n\t */\n\tshowInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Get the input value\n\t */\n\tinputValue(){\n\t\treturn this.control_input.value.trim();\n\t}\n\n\t/**\n\t * Gives the control focus.\n\t */\n\tfocus() {\n\t\tvar self = this;\n\t\tif (self.isDisabled) return;\n\n\t\tself.ignoreFocus = true;\n\n\t\tif( self.control_input.offsetWidth ){\n\t\t\tself.control_input.focus();\n\t\t}else{\n\t\t\tself.focus_node.focus();\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tself.ignoreFocus = false;\n\t\t\tself.onFocus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Forces the control out of focus.\n\t *\n\t */\n\tblur():void {\n\t\tthis.focus_node.blur();\n\t\tthis.onBlur();\n\t}\n\n\t/**\n\t * Returns a function that scores an object\n\t * to show how good of a match it is to the\n\t * provided query.\n\t *\n\t * @return {function}\n\t */\n\tgetScoreFunction(query:string) {\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t}\n\n\t/**\n\t * Returns search options for sifter (the system\n\t * for scoring and sorting results).\n\t *\n\t * @see https://github.com/orchidjs/sifter.js\n\t * @return {object}\n\t */\n\tgetSearchOptions() {\n\t\tvar settings = this.settings;\n\t\tvar sort = settings.sortField;\n\t\tif (typeof settings.sortField === 'string') {\n\t\t\tsort = [{field: settings.sortField}];\n\t\t}\n\n\t\treturn {\n\t\t\tfields      : settings.searchField,\n\t\t\tconjunction : settings.searchConjunction,\n\t\t\tsort        : sort,\n\t\t\tnesting     : settings.nesting\n\t\t};\n\t}\n\n\t/**\n\t * Searches through available options and returns\n\t * a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string) : ReturnType<Sifter['search']>{\n\t\tvar result, calculateScore;\n\t\tvar self     = this;\n\t\tvar options  = this.getSearchOptions();\n\n\t\t// validate user-provided result scoring function\n\t\tif ( self.settings.score ){\n\t\t\tcalculateScore = self.settings.score.call(self,query);\n\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t\t\t}\n\t\t}\n\n\t\t// perform search\n\t\tif (query !== self.lastQuery) {\n\t\t\tself.lastQuery\t\t\t= query;\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\n\t\t\tself.currentResults\t\t= result;\n\t\t} else {\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\n\t\t}\n\n\t\t// filter out selected items\n\t\tif( self.settings.hideSelected ){\n\t\t\tresult.items = result.items.filter((item) => {\n\t\t\t\tlet hashed = hash_key(item.id);\n\t\t\t\treturn !(hashed && self.items.indexOf(hashed) !== -1 );\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Refreshes the list of available options shown\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\trefreshOptions( triggerDropdown:boolean = true ){\n\t\tvar i, j, k, n, optgroup, optgroups, html:DocumentFragment, has_create_option, active_group;\n\t\tvar create;\n\t\tconst groups: {[key:string]:DocumentFragment} = {};\n\n\t\tconst groups_order:string[]\t= [];\n\t\tvar self\t\t\t\t\t= this;\n\t\tvar query\t\t\t\t\t= self.inputValue();\n\t\tconst same_query\t\t\t= query === self.lastQuery || (query == '' && self.lastQuery == null);\n\t\tvar results\t\t\t\t\t= self.search(query);\n\t\tvar active_option\t\t\t= null;\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\n\t\tvar dropdown_content\t\t= self.dropdown_content;\n\n\n\t\tif( same_query ){\n\t\t\tactive_option\t\t\t= self.activeOption;\n\n\t\t\tif( active_option ){\n\t\t\t\tactive_group = active_option.closest('[data-group]') as HTMLElement;\n\t\t\t}\n\t\t}\n\n\t\t// build markup\n\t\tn = results.items.length;\n\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t}\n\n\t\tif( n > 0 ){\n\t\t\tshow_dropdown = true;\n\t\t}\n\n\t\t// render and group available options individually\n\t\tfor (i = 0; i < n; i++) {\n\n\t\t\t// get option dom element\n\t\t\tlet item\t\t\t= results.items[i];\n\t\t\tif( !item ) continue;\n\n\t\t\tlet opt_value\t\t= item.id;\n\t\t\tlet option\t\t\t= self.options[opt_value];\n\n\t\t\tif( option === undefined ) continue;\n\n\t\t\tlet opt_hash\t\t= get_hash(opt_value);\n\t\t\tlet option_el\t\t= self.getOption(opt_hash,true) as HTMLElement;\n\n\t\t\t// toggle 'selected' class\n\t\t\tif( !self.settings.hideSelected ){\n\t\t\t\toption_el.classList.toggle('selected', self.items.includes(opt_hash) );\n\t\t\t}\n\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\n\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\toptgroup = optgroups[j];\n\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\toptgroup = '';\n\t\t\t\t}\n\n\t\t\t\tlet group_fragment = groups[optgroup];\n\t\t\t\tif( group_fragment === undefined ){\n\t\t\t\t\tgroup_fragment = document.createDocumentFragment();\n\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t}\n\n\t\t\t\t// nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\t\t\t\tif( j > 0 ){\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\n\t\t\t\t\tsetAttr(option_el,{id: option.$id+'-clone-'+j,'aria-selected':null});\n\t\t\t\t\toption_el.classList.add('ts-cloned');\n\t\t\t\t\tremoveClasses(option_el,'active');\n\n\n\t\t\t\t\t// make sure we keep the activeOption in the same group\n\t\t\t\t\tif( self.activeOption && self.activeOption.dataset.value == opt_value ){\n\t\t\t\t\t\tif( active_group && active_group.dataset.group === optgroup.toString() ){\n\t\t\t\t\t\t\tactive_option = option_el;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgroup_fragment.appendChild(option_el);\n\t\t\t\tgroups[optgroup] = group_fragment;\n\t\t\t}\n\t\t}\n\n\t\t// sort optgroups\n\t\tif( self.settings.lockOptgroupOrder ){\n\t\t\tgroups_order.sort((a, b) => {\n\t\t\t\tconst grp_a\t\t= self.optgroups[a];\n\t\t\t\tconst grp_b\t\t= self.optgroups[b];\n\t\t\t\tconst a_order\t= grp_a && grp_a.$order || 0;\n\t\t\t\tconst b_order\t= grp_b && grp_b.$order || 0;\n\t\t\t\treturn a_order - b_order;\n\t\t\t});\n\t\t}\n\n\t\t// render optgroup headers & join groups\n\t\thtml = document.createDocumentFragment();\n\t\titerate( groups_order, (optgroup:string) => {\n\n\t\t\tlet group_fragment = groups[optgroup];\n\n\t\t\tif( !group_fragment || !group_fragment.children.length ) return;\n\n\t\t\tlet group_heading = self.optgroups[optgroup];\n\n\t\t\tif( group_heading !== undefined ){\n\n\t\t\t\tlet group_options = document.createDocumentFragment();\n\t\t\t\tlet header = self.render('optgroup_header', group_heading);\n\t\t\t\tappend( group_options, header );\n\t\t\t\tappend( group_options, group_fragment );\n\n\t\t\t\tlet group_html = self.render('optgroup', {group:group_heading,options:group_options} );\n\n\t\t\t\tappend( html, group_html );\n\n\t\t\t} else {\n\t\t\t\tappend( html, group_fragment );\n\t\t\t}\n\t\t});\n\n\t\tdropdown_content.innerHTML = '';\n\t\tappend( dropdown_content, html );\n\n\t\t// highlight matching terms inline\n\t\tif (self.settings.highlight) {\n\t\t\tremoveHighlight( dropdown_content );\n\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\titerate( results.tokens, (tok) => {\n\t\t\t\t\thighlight( dropdown_content, tok.regex);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// helper method for adding templates to dropdown\n\t\tvar add_template = (template:TomTemplateNames) => {\n\t\t\tlet content = self.render(template,{input:query});\n\t\t\tif( content ){\n\t\t\t\tshow_dropdown = true;\n\t\t\t\tdropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\n\t\t// add loading message\n\t\tif( self.loading ){\n\t\t\tadd_template('loading');\n\n\t\t// invalid query\n\t\t}else if( !self.settings.shouldLoad.call(self,query) ){\n\t\t\tadd_template('not_loading');\n\n\t\t// add no_results message\n\t\t}else if( results.items.length === 0 ){\n\t\t\tadd_template('no_results');\n\n\t\t}\n\n\n\n\t\t// add create option\n\t\thas_create_option = self.canCreate(query);\n\t\tif (has_create_option) {\n\t\t\tcreate = add_template('option_create');\n\t\t}\n\n\n\t\t// activate\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\tif( show_dropdown ){\n\n\t\t\tif (results.items.length > 0) {\n\n\t\t\t\tif( !active_option && self.settings.mode === 'single' && self.items[0] != undefined ){\n\t\t\t\t\tactive_option = self.getOption(self.items[0]);\n\t\t\t\t}\n\n\t\t\t\tif( !dropdown_content.contains(active_option)  ){\n\n\t\t\t\t\tlet active_index = 0;\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\n\t\t\t\t\t\tactive_index = 1;\n\t\t\t\t\t}\n\t\t\t\t\tactive_option = self.selectable()[active_index] as HTMLElement;\n\t\t\t\t}\n\n\t\t\t}else if( create ){\n\t\t\t\tactive_option = create;\n\t\t\t}\n\n\t\t\tif( triggerDropdown && !self.isOpen ){\n\t\t\t\tself.open();\n\t\t\t\tself.scrollToOption(active_option,'auto');\n\t\t\t}\n\t\t\tself.setActiveOption(active_option);\n\n\t\t}else{\n\t\t\tself.clearActiveOption();\n\t\t\tif( triggerDropdown && self.isOpen ){\n\t\t\t\tself.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return list of selectable options\n\t *\n\t */\n\tselectable():NodeList{\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\n\t}\n\n\n\n\t/**\n\t * Adds an available option. If it already exists,\n\t * nothing will happen. Note: this does not refresh\n\t * the options list dropdown (use `refreshOptions`\n\t * for that).\n\t *\n\t * Usage:\n\t *\n\t *   this.addOption(data)\n\t *\n\t */\n\taddOption( data:TomOption, user_created = false ):false|string {\n\t\tconst self = this;\n\n\t\t// @deprecated 1.7.7\n\t\t// use addOptions( array, user_created ) for adding multiple options\n\t\tif( Array.isArray(data) ){\n\t\t\tself.addOptions( data, user_created);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst key = hash_key(data[self.settings.valueField]);\n\t\tif( key === null || self.options.hasOwnProperty(key) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tdata.$order\t\t\t= data.$order || ++self.order;\n\t\tdata.$id\t\t\t= self.inputId + '-opt-' + data.$order;\n\t\tself.options[key]\t= data;\n\t\tself.lastQuery\t\t= null;\n\n\t\tif( user_created ){\n\t\t\tself.userOptions[key] = user_created;\n\t\t\tself.trigger('option_add', key, data);\n\t\t}\n\n\t\treturn key;\n\t}\n\n\t/**\n\t * Add multiple options\n\t *\n\t */\n\taddOptions( data:TomOption[], user_created = false ):void{\n\t\titerate( data, (dat:TomOption) => {\n\t\t\tthis.addOption(dat, user_created);\n\t\t});\n\t}\n\n\t/**\n\t * @deprecated 1.7.7\n\t */\n\tregisterOption( data:TomOption ):false|string {\n\t\treturn this.addOption(data);\n\t}\n\n\t/**\n\t * Registers an option group to the pool of option groups.\n\t *\n\t * @return {boolean|string}\n\t */\n\tregisterOptionGroup(data:TomOption) {\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\n\t\tif ( key === null ) return false;\n\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.optgroups[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers a new optgroup for options\n\t * to be bucketed into.\n\t *\n\t */\n\taddOptionGroup(id:string, data:TomOption) {\n\t\tvar hashed_id;\n\t\tdata[this.settings.optgroupValueField] = id;\n\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\n\t\t}\n\t}\n\n\t/**\n\t * Removes an existing option group.\n\t *\n\t */\n\tremoveOptionGroup(id:string) {\n\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\tdelete this.optgroups[id];\n\t\t\tthis.clearCache();\n\t\t\tthis.trigger('optgroup_remove', id);\n\t\t}\n\t}\n\n\t/**\n\t * Clears all existing option groups.\n\t */\n\tclearOptionGroups() {\n\t\tthis.optgroups = {};\n\t\tthis.clearCache();\n\t\tthis.trigger('optgroup_clear');\n\t}\n\n\t/**\n\t * Updates an option available for selection. If\n\t * it is visible in the selected items or options\n\t * dropdown, it will be re-rendered automatically.\n\t *\n\t */\n\tupdateOption(value:string, data:TomOption) {\n\t\tconst self = this;\n\t\tvar item_new;\n\t\tvar index_item;\n\n\t\tconst value_old\t\t= hash_key(value);\n\t\tconst value_new\t\t= hash_key(data[self.settings.valueField]);\n\n\t\t// sanity checks\n\t\tif( value_old === null ) return;\n\n\t\tconst data_old\t\t= self.options[value_old];\n\n\t\tif( data_old == undefined ) return;\n\t\tif( typeof value_new !== 'string' ) throw new Error('Value must be set in option data');\n\n\n\t\tconst option\t\t= self.getOption(value_old);\n\t\tconst item\t\t\t= self.getItem(value_old);\n\n\n\t\tdata.$order = data.$order || data_old.$order;\n\t\tdelete self.options[value_old];\n\n\t\t// invalidate render cache\n\t\t// don't remove existing node yet, we'll remove it after replacing it\n\t\tself.uncacheValue(value_new);\n\n\t\tself.options[value_new] = data;\n\n\t\t// update the option if it's in the dropdown\n\t\tif( option ){\n\t\t\tif( self.dropdown_content.contains(option) ){\n\n\t\t\t\tconst option_new\t= self._render('option', data);\n\t\t\t\treplaceNode(option, option_new);\n\n\t\t\t\tif( self.activeOption === option ){\n\t\t\t\t\tself.setActiveOption(option_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\toption.remove();\n\t\t}\n\n\t\t// update the item if we have one\n\t\tif( item ){\n\t\t\tindex_item = self.items.indexOf(value_old);\n\t\t\tif (index_item !== -1) {\n\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t}\n\n\t\t\titem_new\t= self._render('item', data);\n\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\n\n\t\t\treplaceNode( item, item_new);\n\t\t}\n\n\t\t// invalidate last query because we might have updated the sortField\n\t\tself.lastQuery = null;\n\t}\n\n\t/**\n\t * Removes a single option.\n\t *\n\t */\n\tremoveOption(value:string, silent?:boolean):void {\n\t\tconst self = this;\n\t\tvalue = get_hash(value);\n\n\t\tself.uncacheValue(value);\n\n\t\tdelete self.userOptions[value];\n\t\tdelete self.options[value];\n\t\tself.lastQuery = null;\n\t\tself.trigger('option_remove', value);\n\t\tself.removeItem(value, silent);\n\t}\n\n\t/**\n\t * Clears all options.\n\t */\n\tclearOptions(filter?:TomClearFilter ) {\n\n\t\tconst boundFilter = (filter || this.clearFilter).bind(this);\n\n\t\tthis.loadedSearches\t\t= {};\n\t\tthis.userOptions\t\t= {};\n\t\tthis.clearCache();\n\n\t\tconst selected:TomOptions\t= {};\n\t\titerate(this.options,(option:TomOption,key:string)=>{\n\t\t\tif( boundFilter(option,key as string) ){\n\t\t\t\tselected[key] = option;\n\t\t\t}\n\t\t});\n\n\t\tthis.options = this.sifter.items = selected;\n\t\tthis.lastQuery = null;\n\t\tthis.trigger('option_clear');\n\t}\n\n\t/**\n\t * Used by clearOptions() to decide whether or not an option should be removed\n\t * Return true to keep an option, false to remove\n\t *\n\t */\n\tclearFilter(option:TomOption,value:string){\n\t\tif( this.items.indexOf(value) >= 0 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the dom element of the option\n\t * matching the given value.\n\t *\n\t */\n\tgetOption(value:undefined|null|boolean|string|number, create:boolean=false):null|HTMLElement {\n\n\t\tconst hashed = hash_key(value);\n\t\tif( hashed === null ) return null;\n\n\t\tconst option = this.options[hashed];\n\t\tif( option != undefined ){\n\n\t\t\tif( option.$div ){\n\t\t\t\treturn option.$div;\n\t\t\t}\n\n\t\t\tif( create ){\n\t\t\t\treturn this._render('option', option);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the dom element of the next or previous dom element of the same type\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t *\n\t */\n\tgetAdjacent( option:null|HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|null{\n\t\tvar self = this, all;\n\n\t\tif( !option ){\n\t\t\treturn null;\n\t\t}\n\n\t\tif( type == 'item' ){\n\t\t\tall\t\t\t= self.controlChildren();\n\t\t}else{\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\n\t\t}\n\n\t\tfor( let i = 0; i < all.length; i++ ){\n\t\t\tif( all[i] != option ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( direction > 0 ){\n\t\t\t\treturn all[i+1] as HTMLElement;\n\t\t\t}\n\n\t\t\treturn all[i-1] as HTMLElement;\n\t\t}\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Returns the dom element of the item\n\t * matching the given value.\n\t *\n\t */\n\tgetItem(item:string|TomItem|null):null|TomItem {\n\n\t\tif( typeof item == 'object' ){\n\t\t\treturn item;\n\t\t}\n\n\t\tvar value = hash_key(item);\n\t\treturn value !== null\n\t\t\t? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`)\n\t\t\t: null;\n\t}\n\n\t/**\n\t * \"Selects\" multiple items at once. Adds them to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItems( values:string|string[], silent?:boolean ):void{\n\t\tvar self = this;\n\n\t\tvar items = Array.isArray(values) ? values : [values];\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\n\t\tconst last_item = items[items.length - 1];\n\t\titems.forEach(item => {\n\t\t\tself.isPending = (item !== last_item);\n\t\t\tself.addItem(item, silent);\n\t\t});\n\t}\n\n\t/**\n\t * \"Selects\" an item. Adds it to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItem( value:string, silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change','dropdown_close'];\n\n\t\tdebounce_events(this, events, () => {\n\t\t\tvar item, wasFull;\n\t\t\tconst self = this;\n\t\t \tconst inputMode = self.settings.mode;\n\t\t\tconst hashed = hash_key(value);\n\n\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\n\t\t\t\tif( inputMode === 'single' ){\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\titem = self._render('item', self.options[hashed]);\n\n\t\t\tif( self.control.contains(item) ){ // duplicates\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\n\t\t\t}\n\n\t\t\twasFull = self.isFull();\n\t\t\tself.items.splice(self.caretPos, 0, hashed);\n\t\t\tself.insertAtCaret(item);\n\n\t\t\tif (self.isSetup) {\n\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\tif( !self.isPending && self.settings.hideSelected ){\n\t\t\t\t\tlet option = self.getOption(hashed);\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\n\t\t\t\t\tif( next ){\n\t\t\t\t\t\tself.setActiveOption(next);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// refreshOptions after setActiveOption(),\n\t\t\t\t// otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\t\t\t\tif( !self.isPending && !self.settings.closeAfterSelect ){\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t}\n\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\tif( self.settings.closeAfterSelect != false && self.isFull() ){\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t}\n\n\t\t\t\tself.trigger('item_add', hashed, item);\n\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\tself.inputState();\n\t\t\t\tself.refreshState();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Removes the selected item matching\n\t * the provided value.\n\t *\n\t */\n\tremoveItem( item:string|TomItem|null=null, silent?:boolean ){\n\t\tconst self\t\t= this;\n\t\titem\t\t\t= self.getItem(item);\n\n\t\tif( !item ) return;\n\n\t\tvar i,idx;\n\t\tconst value\t= item.dataset.value;\n\t\ti = nodeIndex(item);\n\n\t\titem.remove();\n\t\tif( item.classList.contains('active') ){\n\t\t\tidx = self.activeItems.indexOf(item);\n\t\t\tself.activeItems.splice(idx, 1);\n\t\t\tremoveClasses(item,'active');\n\t\t}\n\n\t\tself.items.splice(i, 1);\n\t\tself.lastQuery = null;\n\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\tself.removeOption(value, silent);\n\t\t}\n\n\t\tif (i < self.caretPos) {\n\t\t\tself.setCaret(self.caretPos - 1);\n\t\t}\n\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.positionDropdown();\n\t\tself.trigger('item_remove', value, item);\n\n\t}\n\n\t/**\n\t * Invokes the `create` method provided in the\n\t * TomSelect options that should provide the data\n\t * for the new item, given the user input.\n\t *\n\t * Once this completes, it will be added\n\t * to the item list.\n\t *\n\t */\n\tcreateItem( input:null|string=null, callback:TomCreateCallback = ()=>{} ):boolean{\n\n\t\t// triggerDropdown parameter @deprecated 2.1.1\n\t\tif( arguments.length === 3 ){\n\t\t\tcallback = arguments[2];\n\t\t}\n\t\tif( typeof callback != 'function' ){\n\t\t\tcallback = () => {};\n\t\t}\n\n\t\tvar self  = this;\n\t\tvar caret = self.caretPos;\n\t\tvar output;\n\t\tinput = input || self.inputValue();\n\n\t\tif (!self.canCreate(input)) {\n\t\t\tcallback();\n\t\t\treturn false;\n\t\t}\n\n\t\tself.lock();\n\n\t\tvar created = false;\n\t\tvar create = (data?:boolean|TomOption) => {\n\t\t\tself.unlock();\n\n\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\tif( typeof value !== 'string' ){\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tself.setTextboxValue();\n\t\t\tself.addOption(data,true);\n\t\t\tself.setCaret(caret);\n\t\t\tself.addItem(value);\n\t\t\tcallback(data);\n\t\t\tcreated = true;\n\t\t};\n\n\t\tif( typeof self.settings.create === 'function' ){\n\t\t\toutput = self.settings.create.call(this, input, create);\n\t\t}else{\n\t\t\toutput = {\n\t\t\t\t[self.settings.labelField]: input,\n\t\t\t\t[self.settings.valueField]: input,\n\t\t\t};\n\t\t}\n\n\t\tif( !created ){\n\t\t\tcreate(output);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Re-renders the selected item lists.\n\t */\n\trefreshItems() {\n\t\tvar self = this;\n\t\tself.lastQuery = null;\n\n\t\tif (self.isSetup) {\n\t\t\tself.addItems(self.items);\n\t\t}\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Updates all state-dependent attributes\n\t * and CSS classes.\n\t */\n\trefreshState() {\n\t\tconst self     = this;\n\n\t\tself.refreshValidityState();\n\n\t\tconst isFull\t= self.isFull();\n\t\tconst isLocked\t= self.isLocked;\n\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\n\n\n\t\tconst wrap_classList = self.wrapper.classList;\n\n\t\twrap_classList.toggle('focus', self.isFocused)\n\t\twrap_classList.toggle('disabled', self.isDisabled)\n\t\twrap_classList.toggle('required', self.isRequired)\n\t\twrap_classList.toggle('invalid', !self.isValid)\n\t\twrap_classList.toggle('locked', isLocked)\n\t\twrap_classList.toggle('full', isFull)\n\t\twrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden)\n\t\twrap_classList.toggle('dropdown-active', self.isOpen)\n\t\twrap_classList.toggle('has-options', isEmptyObject(self.options) )\n\t\twrap_classList.toggle('has-items', self.items.length > 0);\n\n\t}\n\n\n\t/**\n\t * Update the `required` attribute of both input and control input.\n\t *\n\t * The `required` property needs to be activated on the control input\n\t * for the error to be displayed at the right place. `required` also\n\t * needs to be temporarily deactivated on the input since the input is\n\t * hidden and can't show errors.\n\t */\n\trefreshValidityState() {\n\t\tvar self = this;\n\n\t\tif( !self.input.validity ){\n\t\t\treturn;\n\t\t}\n\n\t\tself.isValid = self.input.validity.valid;\n\t\tself.isInvalid = !self.isValid;\n\t}\n\n\t/**\n\t * Determines whether or not more items can be added\n\t * to the control without exceeding the user-defined maximum.\n\t *\n\t * @returns {boolean}\n\t */\n\tisFull() {\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t}\n\n\t/**\n\t * Refreshes the original <select> or <input>\n\t * element to reflect the current state.\n\t *\n\t */\n\tupdateOriginalInput( opts:TomArgObject = {} ){\n\t\tconst self = this;\n\t\tvar option, label;\n\n\t\tconst empty_option = self.input.querySelector('option[value=\"\"]') as HTMLOptionElement;\n\n\t\tif( self.is_select_tag ){\n\n\t\t\tconst selected:HTMLOptionElement[]\t\t= [];\n\t\t\tconst has_selected:number\t\t\t\t= self.input.querySelectorAll('option:checked').length;\n\n\t\t\tfunction AddSelected(option_el:HTMLOptionElement|null, value:string, label:string):HTMLOptionElement{\n\n\t\t\t\tif( !option_el ){\n\t\t\t\t\toption_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>') as HTMLOptionElement;\n\t\t\t\t}\n\n\t\t\t\t// don't move empty option from top of list\n\t\t\t\t// fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\n\t\t\t\tif( option_el != empty_option ){\n\t\t\t\t\tself.input.append(option_el);\n\t\t\t\t}\n\n\t\t\t\tselected.push(option_el);\n\n\t\t\t\t// marking empty option as selected can break validation\n\t\t\t\t// fixes https://github.com/orchidjs/tom-select/issues/303\n\t\t\t\tif( option_el != empty_option || has_selected > 0 ){\n\t\t\t\t\toption_el.selected = true;\n\t\t\t\t}\n\n\t\t\t\treturn option_el;\n\t\t\t}\n\n\t\t\t// unselect all selected options\n\t\t\tself.input.querySelectorAll('option:checked').forEach((option_el:Element) => {\n\t\t\t\t(<HTMLOptionElement>option_el).selected = false;\n\t\t\t});\n\n\n\t\t\t// nothing selected?\n\t\t\tif( self.items.length == 0 && self.settings.mode == 'single' ){\n\n\t\t\t\tAddSelected(empty_option, \"\", \"\");\n\n\t\t\t// order selected <option> tags for values in self.items\n\t\t\t}else{\n\n\t\t\t\tself.items.forEach((value)=>{\n\t\t\t\t\toption\t\t\t= self.options[value]!;\n\t\t\t\t\tlabel\t\t\t= option[self.settings.labelField] || '';\n\n\t\t\t\t\tif( selected.includes(option.$option) ){\n\t\t\t\t\t\tconst reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`) as HTMLOptionElement;\n\t\t\t\t\t\tAddSelected(reuse_opt, value, label);\n\t\t\t\t\t}else{\n\t\t\t\t\t\toption.$option\t= AddSelected(option.$option, value, label);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t} else {\n\t\t\tself.input.value = self.getValue() as string;\n\t\t}\n\n\t\tif (self.isSetup) {\n\t\t\tif (!opts.silent) {\n\t\t\t\tself.trigger('change', self.getValue() );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the autocomplete dropdown containing\n\t * the available options.\n\t */\n\topen() {\n\t\tvar self = this;\n\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\tself.isOpen = true;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'true'});\n\t\tself.refreshState();\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\n\t\tself.positionDropdown();\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\n\t\tself.focus();\n\t\tself.trigger('dropdown_open', self.dropdown);\n\t}\n\n\t/**\n\t * Closes the autocomplete dropdown menu.\n\t */\n\tclose(setTextboxValue=true) {\n\t\tvar self = this;\n\t\tvar trigger = self.isOpen;\n\n\t\tif( setTextboxValue ){\n\n\t\t\t// before blur() to prevent form onchange event\n\t\t\tself.setTextboxValue();\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\t\t\t}\n\t\t}\n\n\t\tself.isOpen = false;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'false'});\n\t\tapplyCSS(self.dropdown,{display: 'none'});\n\t\tif( self.settings.hideSelected ){\n\t\t\tself.clearActiveOption();\n\t\t}\n\t\tself.refreshState();\n\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\n\t}\n\n\t/**\n\t * Calculates and applies the appropriate\n\t * position of the dropdown if dropdownParent = 'body'.\n\t * Otherwise, position is determined by css\n\t */\n\tpositionDropdown(){\n\n\t\tif( this.settings.dropdownParent !== 'body' ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar context\t\t\t= this.control;\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\n\t\tvar left\t\t\t= rect.left + window.scrollX;\n\n\n\t\tapplyCSS(this.dropdown,{\n\t\t\twidth : rect.width + 'px',\n\t\t\ttop   : top + 'px',\n\t\t\tleft  : left + 'px'\n\t\t});\n\n\t}\n\n\t/**\n\t * Resets / clears all selected items\n\t * from the control.\n\t *\n\t */\n\tclear(silent?:boolean) {\n\t\tvar self = this;\n\n\t\tif (!self.items.length) return;\n\n\t\tvar items = self.controlChildren();\n\t\titerate(items,(item:TomItem)=>{\n\t\t\tself.removeItem(item,true);\n\t\t});\n\n\t\tself.showInput();\n\t\tif( !silent ) self.updateOriginalInput();\n\t\tself.trigger('clear');\n\t}\n\n\t/**\n\t * A helper method for inserting an element\n\t * at the current caret position.\n\t *\n\t */\n\tinsertAtCaret(el:HTMLElement) {\n\t\tconst self\t\t= this;\n\t\tconst caret\t\t= self.caretPos;\n\t\tconst target\t= self.control;\n\n\t\ttarget.insertBefore(el, target.children[caret] || null);\n\t\tself.setCaret(caret + 1);\n\t}\n\n\t/**\n\t * Removes the current selected item(s).\n\t *\n\t */\n\tdeleteSelection(e:KeyboardEvent):boolean {\n\t\tvar direction, selection, caret, tail;\n\t\tvar self = this;\n\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\tselection = getSelection(self.control_input);\n\n\n\t\t// determine items that will be removed\n\t\tconst rm_items:TomItem[]\t= [];\n\n\t\tif (self.activeItems.length) {\n\n\t\t\ttail = getTail(self.activeItems, direction);\n\t\t\tcaret = nodeIndex(tail);\n\n\t\t\tif (direction > 0) { caret++; }\n\n\t\t\titerate(self.activeItems, (item:TomItem) => rm_items.push(item) );\n\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\tconst items = self.controlChildren();\n\t\t\tlet rm_item;\n\t\t\tif( direction < 0 && selection.start === 0 && selection.length === 0 ){\n\t\t\t\trm_item = items[self.caretPos - 1];\n\n\t\t\t}else if( direction > 0 && selection.start === self.inputValue().length ){\n\t\t\t\trm_item = items[self.caretPos];\n\t\t\t}\n\n\t\t\tif( rm_item !== undefined ){\n\t\t\t\trm_items.push( rm_item );\n\t\t\t}\n\t\t}\n\n\t\tif( !self.shouldDelete(rm_items,e) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tpreventDefault(e,true);\n\n\t\t// perform removal\n\t\tif (typeof caret !== 'undefined') {\n\t\t\tself.setCaret(caret);\n\t\t}\n\n\t\twhile( rm_items.length ){\n\t\t\tself.removeItem(rm_items.pop());\n\t\t}\n\n\t\tself.showInput();\n\t\tself.positionDropdown();\n\t\tself.refreshOptions(false);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Return true if the items should be deleted\n\t */\n\tshouldDelete(items:TomItem[],evt:MouseEvent|KeyboardEvent){\n\n\t\tconst values = items.map(item => item.dataset.value);\n\n\t\t// allow the callback to abort\n\t\tif( !values.length || (typeof this.settings.onDelete === 'function' && this.settings.onDelete(values,evt) === false) ){\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Selects the previous / next item (depending on the `direction` argument).\n\t *\n\t * > 0 - right\n\t * < 0 - left\n\t *\n\t */\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\n\t\tvar last_active, adjacent, self = this;\n\n\t\tif (self.rtl) direction *= -1;\n\t\tif( self.inputValue().length ) return;\n\n\n\t\t// add or remove to active items\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\n\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\n\t\t\t\tif( !last_active.classList.contains('active') ){\n\t\t\t\t\tadjacent\t\t\t= last_active;\n\t\t\t\t}else{\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\n\t\t\t\t}\n\n\t\t\t// if no active item, get items adjacent to the control input\n\t\t\t}else if( direction > 0 ){\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\n\t\t\t}else{\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\n\t\t\t}\n\n\n\t\t\tif( adjacent ){\n\t\t\t\tif( adjacent.classList.contains('active') ){\n\t\t\t\t\tself.removeActiveItem(last_active);\n\t\t\t\t}\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t\t\t}\n\n\t\t// move caret to the left or right\n\t\t}else{\n\t\t\tself.moveCaret(direction);\n\t\t}\n\t}\n\n\tmoveCaret(direction:number){}\n\n\t/**\n\t * Get the last active item\n\t *\n\t */\n\tgetLastActive(direction?:number){\n\n\t\tlet last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ){\n\t\t\treturn last_active;\n\t\t}\n\n\n\t\tvar result = this.control.querySelectorAll('.active');\n\t\tif( result ){\n\t\t\treturn getTail(result,direction);\n\t\t}\n\t}\n\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tsetCaret(new_pos:number) {\n\t\tthis.caretPos = this.items.length;\n\t}\n\n\t/**\n\t * Return list of item dom elements\n\t *\n\t */\n\tcontrolChildren():TomItem[]{\n\t\treturn Array.from( this.control.querySelectorAll('[data-ts-item]') ) as TomItem[];\n\t}\n\n\t/**\n\t * Disables user input on the control. Used while\n\t * items are being asynchronously created.\n\t */\n\tlock() {\n\t\tthis.isLocked = true;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Re-enables user input on the control.\n\t */\n\tunlock() {\n\t\tthis.isLocked = false;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Disables user input on the control completely.\n\t * While disabled, it cannot receive focus.\n\t */\n\tdisable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= true;\n\t\tself.control_input.disabled\t\t= true;\n\t\tself.focus_node.tabIndex\t\t= -1;\n\t\tself.isDisabled\t\t\t\t\t= true;\n\t\tthis.close();\n\t\tself.lock();\n\t}\n\n\t/**\n\t * Enables the control so that it can respond\n\t * to focus and user input.\n\t */\n\tenable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= false;\n\t\tself.control_input.disabled\t\t= false;\n\t\tself.focus_node.tabIndex\t\t= self.tabIndex;\n\t\tself.isDisabled\t\t\t\t\t= false;\n\t\tself.unlock();\n\t}\n\n\t/**\n\t * Completely destroys the control and\n\t * unbinds all event listeners so that it can\n\t * be garbage collected.\n\t */\n\tdestroy() {\n\t\tvar self = this;\n\t\tvar revertSettings = self.revertSettings;\n\n\t\tself.trigger('destroy');\n\t\tself.off();\n\t\tself.wrapper.remove();\n\t\tself.dropdown.remove();\n\n\t\tself.input.innerHTML = revertSettings.innerHTML;\n\t\tself.input.tabIndex = revertSettings.tabIndex;\n\n\t\tremoveClasses(self.input,'tomselected','ts-hidden-accessible');\n\n\t\tself._destroy();\n\n\t\tdelete self.input.tomselect;\n\t}\n\n\t/**\n\t * A helper method for rendering \"item\" and\n\t * \"option\" templates, given the data.\n\t *\n\t */\n\trender( templateName:TomTemplateNames, data?:any ):null|HTMLElement{\n\t\tvar id, html;\n\t\tconst self = this;\n\n\t\tif( typeof this.settings.render[templateName] !== 'function' ){\n\t\t\treturn null;\n\t\t}\n\n\t\t// render markup\n\t\thtml = self.settings.render[templateName].call(this, data, escape_html);\n\n\t\tif( html == null ){\n\t\t\treturn html;\n\t\t}\n\n\t\thtml = getDom( html );\n\n\t\t// add mandatory attributes\n\t\tif (templateName === 'option' || templateName === 'option_create') {\n\n\t\t\tif( data[self.settings.disabledField] ){\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\n\t\t\t}else{\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\n\t\t\t}\n\n\t\t}else if (templateName === 'optgroup') {\n\t\t\tid = data.group[self.settings.optgroupValueField];\n\t\t\tsetAttr(html,{'data-group': id});\n\t\t\tif(data.group[self.settings.disabledField]) {\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\n\t\t\t}\n\t\t}\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tconst value\t= get_hash(data[self.settings.valueField]);\n\t\t\tsetAttr(html,{'data-value': value });\n\n\n\t\t\t// make sure we have some classes if a template is overwritten\n\t\t\tif( templateName === 'item' ){\n\t\t\t\taddClasses(html,self.settings.itemClass);\n\t\t\t\tsetAttr(html,{'data-ts-item':''});\n\t\t\t}else{\n\t\t\t\taddClasses(html,self.settings.optionClass);\n\t\t\t\tsetAttr(html,{\n\t\t\t\t\trole:'option',\n\t\t\t\t\tid:data.$id\n\t\t\t\t});\n\n\t\t\t\t// update cache\n\t\t\t\tdata.$div = html;\n\t\t\t\tself.options[value] = data;\n\t\t\t}\n\n\n\t\t}\n\n\t\treturn html;\n\n\t}\n\n\n\t/**\n\t * Type guarded rendering\n\t *\n\t */\n\t_render( templateName:TomTemplateNames, data?:any ):HTMLElement{\n\t\tconst html = this.render(templateName, data);\n\n\t\tif( html == null ){\n\t\t\tthrow 'HTMLElement expected';\n\t\t}\n\t\treturn html;\n\t}\n\n\n\t/**\n\t * Clears the render cache for a template. If\n\t * no template is given, clears all render\n\t * caches.\n\t *\n\t */\n\tclearCache():void{\n\n\t\titerate(this.options, (option:TomOption)=>{\n\t\t\tif( option.$div ){\n\t\t\t\toption.$div.remove();\n\t\t\t\tdelete option.$div;\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t * Removes a value from item and option caches\n\t *\n\t */\n\tuncacheValue(value:string){\n\n\t\tconst option_el\t\t\t= this.getOption(value);\n\t\tif( option_el ) option_el.remove();\n\n\t}\n\n\t/**\n\t * Determines whether or not to display the\n\t * create item prompt, given a user input.\n\t *\n\t */\n\tcanCreate( input:string ):boolean {\n\t\treturn this.settings.create && (input.length > 0) && (this.settings.createFilter as TomCreateFilter ).call(this, input);\n\t}\n\n\n\t/**\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t *\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t *\n\t * });\n\t */\n\thook( when:string, method:string, new_fn:any ){\n\t\tvar self = this;\n\t\tvar orig_method = self[method];\n\n\n\t\tself[method] = function(){\n\t\t\tvar result, result_new;\n\n\t\t\tif( when === 'after' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\tresult_new = new_fn.apply(self, arguments );\n\n\t\t\tif( when === 'instead' ){\n\t\t\t\treturn result_new;\n\t\t\t}\n\n\t\t\tif( when === 'before' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t}\n\n};\n","/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\ntype TSettings = {\n\t[key:string]:any\n}\n\ntype TPlugins = {\n\tnames: string[],\n\tsettings: TSettings,\n\trequested: {[key:string]:boolean},\n\tloaded: {[key:string]:any}\n};\n\nexport type TPluginItem = {name:string,options:{}};\nexport type TPluginHash = {[key:string]:{}};\n\n\n\n\nexport default function MicroPlugin(Interface: any ){\n\n\tInterface.plugins = {};\n\n\treturn class extends Interface{\n\n\t\tpublic plugins:TPlugins = {\n\t\t\tnames     : [],\n\t\t\tsettings  : {},\n\t\t\trequested : {},\n\t\t\tloaded    : {}\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tstatic define(name:string, fn:(this:any,settings:TSettings)=>any){\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t}\n\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {array|object} plugins\n\t\t */\n\t\tinitializePlugins(plugins:string[]|TPluginItem[]|TPluginHash) {\n\t\t\tvar key, name;\n\t\t\tconst self  = this;\n\t\t\tconst queue:string[] = [];\n\n\t\t\tif (Array.isArray(plugins)) {\n\t\t\t\tplugins.forEach((plugin:string|TPluginItem)=>{\n\t\t\t\t\tif (typeof plugin === 'string') {\n\t\t\t\t\t\tqueue.push(plugin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugin.name] = plugin.options;\n\t\t\t\t\t\tqueue.push(plugin.name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile( name = queue.shift() ){\n\t\t\t\tself.require(name);\n\t\t\t}\n\t\t}\n\n\t\tloadPlugin(name:string) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t}\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t */\n\t\trequire(name:string) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t}\n\n\t};\n\n}\n","import TomSelect from './tom-select';\n\nimport change_listener from './plugins/change_listener/plugin';\nimport checkbox_options from './plugins/checkbox_options/plugin';\nimport clear_button from './plugins/clear_button/plugin';\nimport drag_drop from './plugins/drag_drop/plugin';\nimport dropdown_header from './plugins/dropdown_header/plugin';\nimport caret_position from './plugins/caret_position/plugin';\nimport dropdown_input from './plugins/dropdown_input/plugin';\nimport input_autogrow from './plugins/input_autogrow/plugin';\nimport no_backspace_delete from './plugins/no_backspace_delete/plugin';\nimport no_active_items from './plugins/no_active_items/plugin';\nimport optgroup_columns from './plugins/optgroup_columns/plugin';\nimport remove_button from './plugins/remove_button/plugin';\nimport restore_on_backspace from './plugins/restore_on_backspace/plugin';\nimport virtual_scroll from './plugins/virtual_scroll/plugin';\n\nTomSelect.define('change_listener', change_listener);\nTomSelect.define('checkbox_options', checkbox_options);\nTomSelect.define('clear_button', clear_button);\nTomSelect.define('drag_drop', drag_drop);\nTomSelect.define('dropdown_header', dropdown_header);\nTomSelect.define('caret_position', caret_position);\nTomSelect.define('dropdown_input', dropdown_input);\nTomSelect.define('input_autogrow', input_autogrow);\nTomSelect.define('no_backspace_delete', no_backspace_delete);\nTomSelect.define('no_active_items', no_active_items);\nTomSelect.define('optgroup_columns', optgroup_columns);\nTomSelect.define('remove_button', remove_button);\nTomSelect.define('restore_on_backspace', restore_on_backspace);\nTomSelect.define('virtual_scroll', virtual_scroll);\n\nexport default TomSelect;\n","/**\n * Plugin: \"change_listener\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { addEvent } from '../../utils';\n\nexport default function(this:TomSelect) {\n\taddEvent(this.input,'change',()=>{\n\t\tthis.sync();\n\t});\n};\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { preventDefault, hash_key } from '../../utils';\nimport { getDom } from '../../vanilla';\n\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_onOptionSelect = self.onOptionSelect;\n\n\tself.settings.hideSelected = false;\n\n\n\t// update the checkbox for an option\n\tvar UpdateCheckbox = function(option:HTMLElement){\n\t\tsetTimeout(()=>{\n\t\t\tvar checkbox = option.querySelector('input');\n\t\t\tif( checkbox instanceof HTMLInputElement ){\n\t\t\t\tif( option.classList.contains('selected') ){\n\t\t\t\t\tcheckbox.checked = true;\n\t\t\t\t}else{\n\t\t\t\t\tcheckbox.checked = false;\n\t\t\t\t}\n\t\t\t}\n\t\t},1);\n\t};\n\n\t// add checkbox to option template\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_option = self.settings.render.option;\n\n\t\tself.settings.render.option = (data, escape_html) => {\n\t\t\tvar rendered = getDom(orig_render_option.call(self, data, escape_html));\n\t\t\tvar checkbox = document.createElement('input');\n\t\t\tcheckbox.addEventListener('click',function(evt){\n\t\t\t\tpreventDefault(evt);\n\t\t\t});\n\n\t\t\tcheckbox.type = 'checkbox';\n\t\t\tconst hashed = hash_key(data[self.settings.valueField]);\n\n\n\t\t\tif( hashed && self.items.indexOf(hashed) > -1 ){\n\t\t\t\tcheckbox.checked = true;\n\t\t\t}\n\n\t\t\trendered.prepend(checkbox);\n\t\t\treturn rendered;\n\t\t};\n\t});\n\n\t// uncheck when item removed\n\tself.on('item_remove',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\toption.classList.remove('selected'); // selected class won't be removed yet\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\t// check when item added\n\tself.on('item_add',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\n\t// remove items when selected option is clicked\n\tself.hook('instead','onOptionSelect',( evt:KeyboardEvent, option:HTMLElement )=>{\n\n\t\tif( option.classList.contains('selected') ){\n\t\t\toption.classList.remove('selected')\n\t\t\tself.removeItem(option.dataset.value);\n\t\t\tself.refreshOptions();\n\t\t\tpreventDefault(evt,true);\n\t\t\treturn;\n        }\n\n\t\torig_onOptionSelect.call(self, evt, option);\n\n\t\tUpdateCheckbox(option);\n\t});\n\n};\n","/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { CBOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:CBOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\tclassName: 'clear-button',\n\t\ttitle: 'Clear All',\n\t\thtml: (data:CBOptions) => {\n\t\t\treturn `<div class=\"${data.className}\" title=\"${data.title}\">&#10799;</div>`;\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar button = getDom(options.html(options));\n\t\tbutton.addEventListener('click',(evt)=>{\n\n\t\t\tif( self.isDisabled ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.clear();\n\n\t\t\tif( self.settings.mode === 'single' && self.settings.allowEmptyOption ){\n\t\t\t\tself.addItem('');\n\t\t\t}\n\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation();\n\t\t});\n\t\tself.control.appendChild(button);\n\t});\n\n};\n","/**\n * Plugin: \"drag_drop\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tif (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\tif (self.settings.mode !== 'multi') return;\n\n\tvar orig_lock\t\t= self.lock;\n\tvar orig_unlock\t\t= self.unlock;\n\n\tself.hook('instead','lock',()=>{\n\t\tvar sortable = $(self.control).data('sortable');\n\t\tif (sortable) sortable.disable();\n\t\treturn orig_lock.call(self);\n\t});\n\n\tself.hook('instead','unlock',()=>{\n\t\tvar sortable = $(self.control).data('sortable');\n\t\tif (sortable) sortable.enable();\n\t\treturn orig_unlock.call(self);\n\t});\n\n\tself.on('initialize',()=>{\n\t\tvar $control = $(self.control).sortable({\n\t\t\titems: '[data-value]',\n\t\t\tforcePlaceholderSize: true,\n\t\t\tdisabled: self.isLocked,\n\t\t\tstart: (e, ui) => {\n\t\t\t\tui.placeholder.css('width', ui.helper.css('width'));\n\t\t\t\t$control.css({overflow: 'visible'});\n\t\t\t},\n\t\t\tstop: ()=>{\n\t\t\t\t$control.css({overflow: 'hidden'});\n\n\t\t\t\tvar values:string[] = [];\n\t\t\t\t$control.children('[data-value]').each(function(this:HTMLElement){\n\t\t\t\t\tif( this.dataset.value ) values.push(this.dataset.value);\n\t\t\t\t});\n\n\t\t\t\tself.setValue(values);\n\t\t\t}\n\t\t});\n\n\t});\n\n};\n","/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { preventDefault } from '../../utils';\nimport { DHOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:DHOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttitle         : 'Untitled',\n\t\theaderClass   : 'dropdown-header',\n\t\ttitleRowClass : 'dropdown-header-title',\n\t\tlabelClass    : 'dropdown-header-label',\n\t\tcloseClass    : 'dropdown-header-close',\n\n\t\thtml: (data:DHOptions) => {\n\t\t\treturn (\n\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t'<a class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t'</div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar header = getDom(options.html(options));\n\n\t\tvar close_link = header.querySelector('.'+options.closeClass);\n\t\tif( close_link ){\n\t\t\tclose_link.addEventListener('click',(evt)=>{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\tself.close();\n\t\t\t});\n\t\t}\n\n\t\tself.dropdown.insertBefore(header, self.dropdown.firstChild);\n\t});\n\n};\n","/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { nodeIndex, removeClasses } from '../../vanilla';\n\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tself.hook('instead','setCaret',(new_pos:number) => {\n\n\t\tif( self.settings.mode === 'single' || !self.control.contains(self.control_input) ) {\n\t\t\tnew_pos = self.items.length;\n\t\t} else {\n\t\t\tnew_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t\t\tif( new_pos != self.caretPos && !self.isPending ){\n\n\t\t\t\tself.controlChildren().forEach((child,j) => {\n\t\t\t\t\tif( j < new_pos ){\n\t\t\t\t\t\tself.control_input.insertAdjacentElement('beforebegin', child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.control.appendChild( child );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tself.caretPos = new_pos;\n\t});\n\n\tself.hook('instead','moveCaret',(direction:number) => {\n\n\t\tif( !self.isFocused ) return;\n\n\t\t// move caret before or after selected items\n\t\tconst last_active\t\t= self.getLastActive(direction);\n\t\tif( last_active ){\n\t\t\tconst idx = nodeIndex(last_active);\n\t\t\tself.setCaret(direction > 0 ? idx + 1: idx);\n\t\t\tself.setActiveItem();\n\t\t\tremoveClasses(last_active as HTMLElement,'last-active');\n\n\t\t// move caret left or right of current position\n\t\t}else{\n\t\t\tself.setCaret(self.caretPos + direction);\n\n\t\t}\n\n\t});\n\n};\n","/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport * as constants from '../../constants';\nimport { getDom, addClasses } from '../../vanilla';\nimport { addEvent, preventDefault } from '../../utils';\n\n\nexport default function(this:TomSelect) {\n\tconst self = this;\n\n\tself.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\tself.hook('before','setup',()=>{\n\t\tself.focus_node\t\t= self.control;\n\n\t\taddClasses( self.control_input, 'dropdown-input');\n\n\t \tconst div = getDom('<div class=\"dropdown-input-wrap\">');\n\t\tdiv.append(self.control_input);\n\t\tself.dropdown.insertBefore(div, self.dropdown.firstChild);\n\n\t\t// set a placeholder in the select control\n\t\tconst placeholder = getDom('<input class=\"items-placeholder\" tabindex=\"-1\" />') as HTMLInputElement;\n\t\tplaceholder.placeholder = self.settings.placeholder ||'';\n\t\tself.control.append(placeholder);\n\n\t});\n\n\n\tself.on('initialize',()=>{\n\n\t\t// set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n\t\tself.control_input.addEventListener('keydown',(evt:KeyboardEvent) =>{\n\t\t//addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n\t\t\tswitch( evt.keyCode ){\n\t\t\t\tcase constants.KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\tpreventDefault(evt,true);\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_TAB:\n\t\t\t\t\tself.focus_node.tabIndex = -1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn self.onKeyDown.call(self,evt);\n\t\t});\n\n\t\tself.on('blur',()=>{\n\t\t\tself.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n\t\t});\n\n\n\t\t// give the control_input focus when the dropdown is open\n\t\tself.on('dropdown_open',() =>{\n\t\t\tself.control_input.focus();\n\t\t});\n\n\t\t// prevent onBlur from closing when focus is on the control_input\n\t\tconst orig_onBlur = self.onBlur;\n\t\tself.hook('instead','onBlur',(evt?:FocusEvent)=>{\n\t\t\tif( evt && evt.relatedTarget == self.control_input ) return;\n\t\t\treturn orig_onBlur.call(self);\n\t\t});\n\n\t\taddEvent(self.control_input,'blur', () => self.onBlur() );\n\n\t\t// return focus to control to allow further keyboard input\n\t\tself.hook('before','close',() =>{\n\n\t\t\tif( !self.isOpen ) return;\n\t\t\tself.focus_node.focus({preventScroll: true});\n\t\t});\n\n\t});\n\n};\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { addEvent } from '../../utils';\n\nexport default function(this:TomSelect) {\n\tvar self\t\t\t\t\t= this;\n\n\tself.on('initialize',()=>{\n\n\n\t\tvar test_input\t\t\t\t= document.createElement('span');\n\t\tvar control\t\t\t\t\t= self.control_input;\n\t\ttest_input.style.cssText\t= 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n\n\t\tself.wrapper.appendChild(test_input);\n\n\n\t\tvar transfer_styles\t\t\t= [ 'letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform' ];\n\n\t\tfor( const style_name of transfer_styles ){\n\t\t\t// @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n\t\t\ttest_input.style[style_name] = control.style[style_name];\n\t\t}\n\n\n\t\t/**\n\t\t * Set the control width\n\t\t *\n\t\t */\n\t\tvar resize = ()=>{\n\t\t\ttest_input.textContent\t= control.value;\n\t\t\tcontrol.style.width\t\t= test_input.clientWidth+'px';\n\t\t};\n\n\t\tresize();\n\t\tself.on('update item_add item_remove',resize);\n\t\taddEvent(control,'input', resize );\n\t\taddEvent(control,'keyup', resize );\n\t\taddEvent(control,'blur', resize );\n\t\taddEvent(control,'update', resize );\n\t});\n\n};\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_deleteSelection = self.deleteSelection;\n\n\tthis.hook('instead','deleteSelection',(evt:KeyboardEvent) => {\n\n\t\tif( self.activeItems.length ){\n\t\t\treturn orig_deleteSelection.call(self, evt);\n\t\t}\n\n\t\treturn false;\n\t});\n\n};\n","/**\n * Plugin: \"no_active_items\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\n\nexport default function(this:TomSelect) {\n\tthis.hook('instead','setActiveItem',() => {});\n\tthis.hook('instead','selectAll',() => {});\n};\n","/**\n * Plugin: \"optgroup_columns\" (Tom Select.js)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport * as constants from '../../constants';\nimport { parentMatch, nodeIndex } from '../../vanilla';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\n\tvar orig_keydown = self.onKeyDown;\n\n\tself.hook('instead','onKeyDown',(evt:KeyboardEvent)=>{\n\t\tvar index, option, options, optgroup;\n\n\t\tif( !self.isOpen || !(evt.keyCode === constants.KEY_LEFT || evt.keyCode === constants.KEY_RIGHT)) {\n\t\t\treturn orig_keydown.call(self,evt);\n\t\t}\n\n\t\tself.ignoreHover\t= true;\n\t\toptgroup\t\t\t= parentMatch(self.activeOption,'[data-group]');\n\t\tindex\t\t\t\t= nodeIndex(self.activeOption,'[data-selectable]');\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( evt.keyCode === constants.KEY_LEFT ){\n\t\t\toptgroup = optgroup.previousSibling;\n\t\t} else {\n\t\t\toptgroup = optgroup.nextSibling;\n\t\t}\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\toptions\t\t\t\t= (<HTMLOptGroupElement>optgroup).querySelectorAll('[data-selectable]');\n\t\toption\t\t\t\t= options[ Math.min(options.length - 1, index) ] as HTMLElement;\n\n\t\tif( option ){\n\t\t\tself.setActiveOption(option);\n\t\t}\n\n\t});\n\n};\n","/**\n * Plugin: \"remove_button\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\nimport { TomOption, TomItem } from '../../types/index';\nimport { RBOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:RBOptions) {\n\n\tconst options = Object.assign({\n\t\t\tlabel     : '&times;',\n\t\t\ttitle     : 'Remove',\n\t\t\tclassName : 'remove',\n\t\t\tappend    : true\n\t\t}, userOptions);\n\n\n\t//options.className = 'remove-single';\n\tvar self\t\t\t= this;\n\n\t// override the render method to add remove button to each item\n\tif( !options.append ){\n\t\treturn;\n\t}\n\n\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = (data:TomOption, escape:typeof escape_html) => {\n\n\t\t\tvar item = getDom(orig_render_item.call(self, data, escape)) as TomItem;\n\n\t\t\tvar close_button = getDom(html);\n\t\t\titem.appendChild(close_button);\n\n\t\t\taddEvent(close_button,'mousedown',(evt) => {\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t});\n\n\t\t\taddEvent(close_button,'click',(evt) => {\n\n\t\t\t\t// propagating will trigger the dropdown to show for single mode\n\t\t\t\tpreventDefault(evt,true);\n\n\t\t\t\tif( self.isLocked ) return;\n\t\t\t\tif( !self.shouldDelete([item],evt as MouseEvent) ) return;\n\n\t\t\t\tself.removeItem(item);\n\t\t\t\tself.refreshOptions(false);\n\t\t\t\tself.inputState();\n\t\t\t});\n\n\t\t\treturn item;\n\t\t};\n\n\t});\n\n\n};\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select';\nimport { TomOption } from '../../types/index';\n\ntype TPluginOptions = {\n\ttext?:(option:TomOption)=>string,\n};\n\nexport default function(this:TomSelect, userOptions:TPluginOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttext: (option:TomOption) => {\n\t\t\treturn option[self.settings.labelField];\n\t\t}\n\t},userOptions);\n\n\tself.on('item_remove',function(value:string){\n\t\tif( !self.isFocused ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.control_input.value.trim() === '' ){\n\t\t\tvar option = self.options[value];\n\t\t\tif( option ){\n\t\t\t\tself.setTextboxValue(options.text.call(self, option));\n\t\t\t}\n\t\t}\n\t});\n\n};\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { TomOption } from '../../types/index';\nimport { addClasses } from '../../vanilla';\n\nexport default function(this:TomSelect) {\n\tconst self\t\t\t\t\t\t\t= this;\n\tconst orig_canLoad\t\t\t\t\t= self.canLoad;\n\tconst orig_clearActiveOption\t\t= self.clearActiveOption;\n\tconst orig_loadCallback\t\t\t\t= self.loadCallback;\n\n\tvar pagination:{[key:string]:any}\t= {};\n\tvar dropdown_content:HTMLElement;\n\tvar loading_more\t\t\t\t\t= false;\n\tvar load_more_opt:HTMLElement;\n\tvar default_values: string[]\t\t= [];\n\n\tif( !self.settings.shouldLoadMore ){\n\n\t\t// return true if additional results should be loaded\n\t\tself.settings.shouldLoadMore = ():boolean=>{\n\n\t\t\tconst scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n\t\t\tif( scroll_percent > 0.9 ){\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif( self.activeOption ){\n\t\t\t\tvar selectable\t= self.selectable();\n\t\t\t\tvar index\t\t= Array.from(selectable).indexOf(self.activeOption);\n\t\t\t\tif( index >= (selectable.length-2) ){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\tif( !self.settings.firstUrl ){\n\t\tthrow 'virtual_scroll plugin requires a firstUrl() method';\n\t}\n\n\n\t// in order for virtual scrolling to work,\n\t// options need to be ordered the same way they're returned from the remote data source\n\tself.settings.sortField\t\t\t= [{field:'$order'},{field:'$score'}];\n\n\n\t// can we load more results for given query?\n\tconst canLoadMore = (query:string):boolean => {\n\n\t\tif( typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions ){\n\t\t\treturn false;\n\t\t}\n\n\t\tif( (query in pagination) && pagination[query] ){\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tconst clearFilter = (option:TomOption, value:string):boolean => {\n\t\tif( self.items.indexOf(value) >= 0 || default_values.indexOf(value) >= 0 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\n\t// set the next url that will be\n\tself.setNextUrl = (value:string,next_url:any):void => {\n\t\tpagination[value] = next_url;\n\t};\n\n\t// getUrl() to be used in settings.load()\n\tself.getUrl = (query:string):any =>{\n\n\t\tif( query in pagination ){\n\t\t\tconst next_url = pagination[query];\n\t\t\tpagination[query] = false;\n\t\t\treturn next_url;\n\t\t}\n\n\t\t// if the user goes back to a previous query\n\t\t// we need to load the first page again\n\t\tpagination = {};\n\n\t\treturn self.settings.firstUrl.call(self,query);\n\t};\n\n\n\t// don't clear the active option (and cause unwanted dropdown scroll)\n\t// while loading more results\n\tself.hook('instead','clearActiveOption',()=>{\n\n\t\tif( loading_more ){\n\t\t\treturn;\n\t\t}\n\n\t\treturn orig_clearActiveOption.call(self);\n\t});\n\n\t// override the canLoad method\n\tself.hook('instead','canLoad',(query:string)=>{\n\n\t\t// first time the query has been seen\n\t\tif( !(query in pagination) ){\n\t\t\treturn orig_canLoad.call(self,query);\n\t\t}\n\n\t\treturn canLoadMore(query);\n\t});\n\n\n\t// wrap the load\n\tself.hook('instead','loadCallback',( options:TomOption[], optgroups:TomOption[])=>{\n\n\t\tif( !loading_more ){\n\t\t\tself.clearOptions(clearFilter);\n\t\t}else if( load_more_opt ){\n\t\t\tconst first_option = options[0];\n\t\t\tif( first_option !== undefined ){\n\t\t\t\tload_more_opt.dataset.value\t\t= first_option[self.settings.valueField];\n\t\t\t}\n\t\t}\n\n\t\torig_loadCallback.call( self, options, optgroups);\n\n\t\tloading_more = false;\n\t});\n\n\n\t// add templates to dropdown\n\t//\tloading_more if we have another url in the queue\n\t//\tno_more_results if we don't have another url in the queue\n\tself.hook('after','refreshOptions',()=>{\n\n\t\tconst query\t\t= self.lastValue;\n\t\tvar option;\n\n\t\tif( canLoadMore(query) ){\n\n\t\t\toption = self.render('loading_more',{query:query});\n\t\t\tif( option ){\n\t\t\t\toption.setAttribute('data-selectable',''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\t\t\t\tload_more_opt = option;\n\t\t\t}\n\n\t\t}else if( (query in pagination) && !dropdown_content.querySelector('.no-results') ){\n\t\t\toption = self.render('no_more_results',{query:query});\n\t\t}\n\n\t\tif( option ){\n\t\t\taddClasses(option,self.settings.optionClass);\n\t\t\tdropdown_content.append( option );\n\t\t}\n\n\t});\n\n\n\t// add scroll listener and default templates\n\tself.on('initialize',()=>{\n\t\tdefault_values = Object.keys(self.options);\n\t\tdropdown_content = self.dropdown_content;\n\n\t\t// default templates\n\t\tself.settings.render = Object.assign({}, {\n\t\t\tloading_more:() => {\n\t\t\t\treturn `<div class=\"loading-more-results\">Loading more results ... </div>`;\n\t\t\t},\n\t\t\tno_more_results:() =>{\n\t\t\t\treturn `<div class=\"no-more-results\">No more results</div>`;\n\t\t\t}\n\t\t},self.settings.render);\n\n\n\t\t// watch dropdown content scroll position\n\t\tdropdown_content.addEventListener('scroll',()=>{\n\n\t\t\tif( !self.settings.shouldLoadMore.call(self) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\t\t\tif( !canLoadMore(self.lastValue) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// don't call load() too much\n\t\t\tif( loading_more ) return;\n\n\n\t\t\tloading_more = true;\n\t\t\tself.load.call(self,self.lastValue);\n\t\t});\n\t});\n\n};\n"],"names":["forEvents","events","callback","split","forEach","event","MicroEvent","constructor","this","_events","on","fct","event_array","push","off","n","arguments","length","undefined","splice","indexOf","trigger","args","self","apply","arrayToPattern","chars","filter","Boolean","maxValueLength","join","sequencePattern","array","hasDuplicates","pattern","prev_char_count","prev_pattern","char","i","setToPattern","toArray","Set","size","escape_regex","str","replace","reduce","longest","value","Math","max","unicodeLength","p","Array","from","allSubstrings","input","result","start","substring","subresult","tmp","slice","charAt","unshift","code_points","unicode_map","multi_char_reg","latin_convert","æ","ⱥ","ø","⁄","∕","convert_pat","RegExp","Object","keys","normalize","form","asciifold","match","decompose","toLowerCase","generateSets","unicode_sets","addMatching","folded","to_add","folded_set","patt","add","code_point_min","code_point_max","composed","String","fromCharCode","decomposed","code_point","generator","generateMap","multi_char","set","sort","a","b","multi_char_patt","substringsToPattern","min_replacement","map","sub_pat","strings","chars_replaced","mapSequence","sequencesToPattern","sequences","all","sequence","seq","len","j","substrs","inSequences","needle_seq","end","needle_parts","parts","part","needle_part","substr","Sequence","[object Object]","min","position","last_piece","clone","JSON","parse","stringify","last_part","pop","last_substr","clone_last_len","getPattern","_code_points","match_str","overlapping","added_types","last","has","new_seq","old_seq","getAttr","obj","name","getAttrNesting","names","shift","scoreValue","token","weight","score","pos","regex","search","string","propToArray","key","isArray","iterate","object","hasOwnProperty","cmp","Sifter","items","settings","diacritics","query","respect_word_boundaries","weights","tokens","words","field_regex","word","field_match","field","options","prepareSearch","_getScoreFunction","token_count","fields","field_count","getAttrFn","scoreObject","data","sum","conjunction","_getSortFunction","implicit_score","sort_flds","sort_empty","bind","get_field","id","s","fld","direction","sort_fld","optsUser","assign","trim","tokenize","total","nesting","fn_score","item","_","fn_sort","limit","getDom","jquery","HTMLElement","isHtmlString","tpl","document","createElement","innerHTML","content","firstChild","querySelector","arg","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","el","cls","classList","removeClasses","remove","_classes","concat","parentMatch","target","selector","wrapper","contains","matches","parentNode","getTail","list","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","val","attr","removeAttribute","setAttribute","replaceNode","existing","replacement","replaceChild","highlight","element","highlightText","highlightRecursive","node","nodeType","spannode","className","middlebit","splitText","index","middleclone","cloneNode","appendChild","childNodes","test","tagName","highlightChildren","KEY_SHORTCUT","navigator","userAgent","defaults","optgroups","plugins","delimiter","splitOn","persist","create","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","controlClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","hash_key","get_hash","escape_html","loadDebounce","fn","delay","timeout","loading","clearTimeout","setTimeout","loadedSearches","call","debounce_events","types","type","event_args","preventDefault","evt","stop","stopPropagation","addEvent","addEventListener","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getId","existing_id","getAttribute","addSlashes","append","parent","getSettings","settings_user","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","option","textContent","optionsMap","group_count","readData","addOption","settings_element","dataset","json","group","arr","option_data","disabled","$option","selected","hasAttribute","children","child","optgroup","optgroup_data","data_raw","opt","values","init_textbox","instance_i","TomSelect","Interface","super","requested","loaded","initializePlugins","queue","plugin","require","loadPlugin","Error","MicroPlugin","input_arg","user_settings","dir","control_input","dropdown","control","dropdown_content","focus_node","order","tabIndex","is_select_tag","rtl","inputId","_destroy","sifter","isOpen","isDisabled","isRequired","isInvalid","isValid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","ignoreHover","hasOptions","currentResults","lastValue","caretPos","activeOption","activeItems","userOptions","tomselect","window","getComputedStyle","getPropertyValue","required","setupCallbacks","setupTemplates","_render","inputMode","setup","passive_event","passive","listboxId","role","aria-haspopup","aria-expanded","control_id","escapeQuery","label","label_click","focus","for","label_id","width","classes_plugins","multiple","load","e","target_match","onOptionHover","capture","onOptionSelect","onItemSelect","onClick","onKeyDown","onKeyPress","onInput","positionDropdown","onBlur","onFocus","onPaste","doc_mousedown","composedPath","blur","inputState","win_scroll","removeEventListener","revertSettings","insertAdjacentElement","sync","refreshState","updateOriginalInput","refreshItems","close","disable","enable","onChange","setupOptions","addOptions","registerOptionGroup","templates","optgroup_header","escape","option_create","no_results","not_loading","callbacks","initialize","change","item_add","item_remove","item_select","clear","option_add","option_remove","option_clear","optgroup_add","optgroup_remove","optgroup_clear","dropdown_open","dropdown_close","get_settings","setValue","lastQuery","clearActiveItems","onMouseDown","pastedText","inputValue","splitInput","piece","addItem","createItem","character","keyCode","which","constants","selectAll","open","next","getAdjacent","setActiveOption","prev","canSelect","activeElement","advanceSelection","deleteSelection","refreshOptions","wasFocused","showInput","hasFocus","deactivate","setActiveItem","setCaret","parentElement","closeAfterSelect","canLoad","loadCallback","clearActiveOption","setTextboxValue","getValue","silent","addItems","setMaxItems","eventName","begin","swap","getLastActive","prototype","setActiveItemClass","removeActiveItem","hideInput","last_active","idx","scroll","aria-activedescendant","aria-selected","scrollToOption","behavior","height_menu","clientHeight","scrollTop","height_item","offsetHeight","y","getBoundingClientRect","top","scrollBehavior","controlChildren","toggle","offsetWidth","getScoreFunction","getSearchOptions","calculateScore","hashed","triggerDropdown","k","html","has_create_option","active_group","groups","groups_order","same_query","elements","results","active_option","show_dropdown","closest","opt_value","opt_hash","option_el","getOption","includes","group_fragment","createDocumentFragment","$id","toString","grp_a","grp_b","a_order","$order","group_heading","group_options","header","group_html","querySelectorAll","tok","add_template","template","insertBefore","canCreate","active_index","selectable","user_created","dat","registerOption","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","item_new","index_item","value_old","value_new","data_old","getItem","uncacheValue","option_new","removeOption","removeItem","clearOptions","boundFilter","clearFilter","$div","last_item","x","isPending","wasFull","isFull","insertAtCaret","output","caret","lock","created","unlock","refreshValidityState","wrap_classList","validity","valid","opts","empty_option","has_selected","AddSelected","visibility","display","context","rect","scrollY","left","scrollX","selection","tail","selectionStart","selectionEnd","rm_items","rm_item","shouldDelete","onDelete","adjacent","nextElementSibling","moveCaret","new_pos","destroy","templateName","aria-disabled","data-selectable","data-disabled","data-ts-item","hook","when","method","new_fn","orig_method","result_new","define","orig_onOptionSelect","UpdateCheckbox","checkbox","HTMLInputElement","checked","orig_render_option","rendered","prepend","title","button","$","sortable","orig_lock","orig_unlock","$control","forcePlaceholderSize","ui","helper","overflow","each","headerClass","titleRowClass","labelClass","closeClass","close_link","div","orig_onBlur","relatedTarget","preventScroll","test_input","cssText","style_name","resize","clientWidth","orig_deleteSelection","orig_keydown","previousSibling","nextSibling","orig_render_item","close_button","text","orig_canLoad","orig_clearActiveOption","orig_loadCallback","pagination","load_more_opt","loading_more","default_values","shouldLoadMore","scroll_percent","scrollHeight","firstUrl","canLoadMore","setNextUrl","next_url","getUrl","first_option","no_more_results"],"mappings":"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"}